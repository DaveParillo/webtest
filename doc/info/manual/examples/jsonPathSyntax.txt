<b>
JsonPath expressions always refer to a JSON structure in the same way as 
XPath expression are used in combination with an XML document. 
The "root member object" in JsonPath is always referred to as <em>$</em> 
whether it is an object or array.
</b>

<b>JsonPath expressions can use the dot–notation:</b>

<code>
$.store.book[0].title
</code>

<b>or the bracket–notation:</b>

<code>
$['store']['book'][0]['title']
</code>

<b>
Operators
</b>
<b>
  <dl>
    <li>
      <dt>
        $
      </dt>
      <dd>
        The root element to query. This starts all path expressions.
      </dd>
    </li>
    <li>
      <dt>
        @
      </dt>
      <dd>
        The current node being processed by a filter predicate.
      </dd>
    </li>
    <li>
      <dt>
        *
      </dt>
      <dd>Wildcard.
        Available anywhere a name or numeric are required.
      </dd>
    </li>
    <li>
      <dt>
        ..
      </dt>
      <dd>Deep scan.
        Available anywhere a name is required.
      </dd>
    </li>
    <li>
      <dt>
        .&lt;name&gt;
      </dt>
      <dd>Child reference using dot notation.
      </dd>
    </li>
    <li>
      <dt>
        ['&lt;name&gt;' (, '&lt;name&gt;')]
      </dt>
      <dd>Child reference using bracket notation.
        Multiple children can be listed in the brackets.
      </dd>
    </li>
    <li>
      <dt>
        [&lt;number&gt; (, &lt;number&gt;)]
      </dt>
      <dd>Array index (or multiple idexes).
      </dd>
    </li>
    <li>
      <dt>
        [start:end]
      </dt>
      <dd>Array slice operator.
      </dd>
    </li>
    <li>
      <dt>
        [?(&lt;expression&gt;)]
      </dt>Filter expression.
      <dd>Expression must evaluate to a boolean value.
      </dd>
    </li>

</dl>


</b>


