<?xml version="1.0" encoding="iso-8859-1"?><manpage xmlns:java="http://xml.apache.org/xalan/java" siteid="pdfToTextFilter"><site name="WebTest">
	<level1 name="Home" url="WebTestHome.html">
		<level2 name="Home" url="WebTestHome.html"/>
		<level2 name="Key Characteristics" url="keyCharacteristics.html"/>
		<level2 name="White Paper" url="whitepaper.html"/>
		<level2 name="Downloads" url="Downloads.html"/>
		<level2 name="Install" url="install.html"/>
		<level2 name="Troubleshooting" url="troubleshooting.html"/>
		<level2 name="Acknowledgments" url="acknowledgments.html"/>
		<level2 name="Issue tracker" url="https://github.com/DaveParillo/webtest/issues"/>
		<level2 name="Source code" url="https://github.com/DaveParillo/webtest"/> 
		<level2 name="License" url="license.html"/>
	</level1>
	<level1 name="Manual" url="manualOverview.html">
		<level2 name="Manual Overview" url="manualOverview.html"/>
		<level2 name="Samples" url="samples.html"/>
		<level2 name="Properties" url="properties.html"/>
		<level2 name="Syntax Reference - General Steps" url="syntaxGeneral.html"/>
		<level2 name="Syntax Reference - Core Steps" url="syntaxCore.html"/>
		<level2 name="Syntax Reference - Extension Steps" url="syntaxExtension.html"/>
		<level2 name="Syntax Reference - Filter Steps" url="syntaxFilter.html"/>
        <level2 name="Syntax Reference - PDF Steps" url="syntaxPDF.html"><level3 name="pdfDecryptDocument" url="pdfDecryptDocument.html"/><level3 name="pdfToBookmarksFilter" url="pdfToBookmarksFilter.html"/><level3 name="pdfToFontsFilter" url="pdfToFontsFilter.html"/><level3 name="pdfToLinksFilter" url="pdfToLinksFilter.html"/><level3 name="pdfToTextFilter" url="pdfToTextFilter.html"/><level3 name="pdfVerifyBookmark" url="pdfVerifyBookmark.html"/><level3 name="pdfVerifyCheckboxField" url="pdfVerifyCheckboxField.html"/><level3 name="pdfVerifyEncryption" url="pdfVerifyEncryption.html"/><level3 name="pdfVerifyEncryptionPermissions" url="pdfVerifyEncryptionPermissions.html"/><level3 name="pdfVerifyEncryptionProperty" url="pdfVerifyEncryptionProperty.html"/><level3 name="pdfVerifyEncryptionStrength" url="pdfVerifyEncryptionStrength.html"/><level3 name="pdfVerifyField" url="pdfVerifyField.html"/><level3 name="pdfVerifyFieldCount" url="pdfVerifyFieldCount.html"/><level3 name="pdfVerifyFont" url="pdfVerifyFont.html"/><level3 name="pdfVerifyInfoProperty" url="pdfVerifyInfoProperty.html"/><level3 name="pdfVerifyLink" url="pdfVerifyLink.html"/><level3 name="pdfVerifyPageCount" url="pdfVerifyPageCount.html"/><level3 name="pdfVerifyReadOnlyField" url="pdfVerifyReadOnlyField.html"/><level3 name="pdfVerifyText" url="pdfVerifyText.html"/><level3 name="pdfVerifyTextField" url="pdfVerifyTextField.html"/><level3 name="pdfVerifyTitle" url="pdfVerifyTitle.html"/></level2>
        <level2 name="Syntax Reference - Excel Steps" url="syntaxExcel.html"/>
        <level2 name="Syntax Reference - Email Steps" url="syntaxEmail.html"/>
        <level2 name="Step Index" url="stepIndex.html"/>
        <level2 name="Groovy Testing" url="groovyTesting.html"/>
        <level2 name="Integration with other Tools" url="integration.html"/>
		<level2 name="Annotated References" url="annotatedRefs.html"/>
	</level1>
	<level1 name="Develop" url="developOverview.html">
		<level2 name="Develop Overview" url="developOverview.html"/>
		<level2 name="Building" url="building.html"/>
		<level2 name="Release" url="release.html"/>
	</level1>
	<level1 name="Build Info" url="buildOverview.html">
		<level2 name="Build Overview" url="/webtest/manual/buildOverview.html"/>
		<level2 name="Unit Test Report" url="/webtest/junit/index.html"/>
		<level2 name="Self Test Report" url="/webtest/reports/selftest/index.html"/>
		<level2 name="Release Test Report" url="/webtest/reports/releasetest/index.html"/>
		<level2 name="API Doc" url="/webtest/api/"/>
	</level1>
</site><head title="PDF Step| pdfToTextFilter"/><section title="Description"><b>Extracts all text content from within the current <key>pdf</key> document.</b><pre>

    <b>
        In general, PDF documents can place text in documents using a variety of mechanisms. They may contain
        text as a stream of characters in an expected order, the order may not be expected but explicit
        positioning will place it in the correct position or it may contain graphical representations
        of the characters. For these reasons, this filter may not always produce what you expect.
        You will have to experiment to see what will work for you.
    </b>

</pre></section><section title="Parameters"><attributes><attribute><name>description</name><description>The description of this test step.</description><required>no</required></attribute><attribute><name>pageSep</name><description>The page separator string to use, e.g. "\n" or "------".</description><required>no, default is
					[+++ NEW PAGE +++]\n</required></attribute><attribute><name>lineSep</name><description>The line separator string to use, e.g. " " or "\n".</description><required>no, default is
					platform line separator</required></attribute><attribute><name>fragSep</name><description>The fragment separator string to use, e.g. "" or " " or "," or " | ". Only used if <em>mode</em> is "<em>groupByLines</em>".</description><required>no, default is
					a single space</required></attribute><attribute><name>mode</name><description>Deprecated: doesn't do anything anymore.</description><required>no, default is
					normal</required></attribute></attributes></section><section title="Details"><post>
    <b>
        Here is an example of using <em>pdfToTextFilter</em>:
    </b>

    <code caption="pdfToTextFilter example">
        <include src="pdfexamples/toTextFilterExample.xml"/>
    </code>

    <b>As a result of invoking the above steps a file would be created containing something like the following:</b>

    <code caption="pdfToTextFilter output">
        <include src="pdfexamples/toTextFilterOutput.xml"/>
    </code>

</post></section></manpage>