<?xml version="1.0" encoding="UTF-8" ?>
<webtest-doc>
<nested>
<name>step</name>
<category>General</category>
<description>A step is a single command to be executed by webtest.</description>
<pre>
	<b>Test steps are grouped into three major categories:</b>
	<dl>
		<li>
			<dt>Action</dt>
			<dd>Issue an HTTP request and store the result, e.g. invoke the URL
				&quot;http://www.seibertec.ch/wiki&quot;.</dd>
		</li>
		<li>
			<dt>Verification</dt>
			<dd>Verify the correctness of the latest result, e.g. ensure
				that a particular text string occurs in the page title.</dd>
		</li>
		<li>
			<dt>Manipulation</dt>
			<dd>Prepare the next request, e.g. by setting parameter values.</dd>
		</li>
	</dl>
</pre>
</nested>
<nested>
<name>condition</name>
<category>Extension</category>
<description>A condition is a group of step to be executed by webtest.</description>
<pre>
    <b>A condition is a <stepref name="group" category="Core"/> of steps.
    The condition is true if all the first-level steps succeed.</b>
</pre>
</nested>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfToLinksFilter</class>
                    <name>pdfToLinksFilter</name>
                    <category>PDF</category>
                    <description><![CDATA[Extracts all links from within the current <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                    <post>
    <b>
        Here is an example of using <em>pdfToLinksFilter</em>:
    </b>

    <code caption='pdfToLinksFilter example'>
        <include src='pdfexamples/toLinksFilterExample.xml'/>
    </code>

    <b>As a result of invoking the above steps a file would be created containing something like the following:</b>

    <code caption='pdfToLinksFilter output'>
        <include src='pdfexamples/toLinksFilterOutput.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.request.SelectWebClient</class>
                    <name>selectWebClient</name>
                    <category>Extension</category>
                    <description><![CDATA[Selects the WebClient to navigate with, creating it if none exists with this name. Useful when a test sequence requires actions to be performed by different users (e.g. an admin and an normal user). If used with nested steps, the previously selected WebClient is selected again when the execution of the nested tests ends.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the WebClient to select (will be created if it doesn't yet exist). 'default' designates the WebClient available at test startup. This name has nothing to do with the simulated browser and just serve for organisation within the test like 'administrator' or 'normal user']]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyNumberOfPagesStep</class>
                    <name>pdfVerifyPageCount</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the number of fields in the <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>count</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The expected number of pages.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyPageCount">
        <include src='pdfexamples/verifyPageCountExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.exceltest.ExcelStoreCellValue</class>
                    <name>excelStoreCellValue</name>
                    <category>Excel</category>
                    <description><![CDATA[Provides the ability to store the value of a cell in a property for later checking. Note that this step tests the actual stored value of the cell, not what is displayed in the spreadsheet. In particular, formulas will not be evaluated.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                            <parameter>
                                <name>cell</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The spreadsheet cell to select. eg. A5. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>row</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The number of the row to select, starting at 1. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>col</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name or number (starting at 1) of the column to select. eg 1 or A. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the sheet to select. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index of the sheet to select, starting at zero. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                    <post>

    <b>
        Here is an example of using the
        <em>excelStoreCellValue</em>
        step illustrating both a simple and more complex comparison:
    </b>

    <code caption="excelStoreCellValue Example">
        <include src='excelExamples/storeCellValueExample.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyCheckbox</class>
                    <name>verifyCheckbox</name>
                    <category>Core</category>
                    <description><![CDATA[This step is used to verify the state of a checkbox (checked/unchecked). A particular checkbox can be specified via <em>name</em> and optionally <em>value</em> (or alternatively by <em>fieldIndex</em>).]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>checked</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[Specifies if the checkbox shall be checked (true) or unchecked (false).]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The value of the input field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the form containing the field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index (starting at 0) of the field of interest (if more than one).]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                    <post>

    <b>Here is a simple example for verifying that a particular checkbox is not selected. The checkbox is uniquely
    identified by its name.</b>

    <code caption="verifyCheckbox 1">
        <include src='examples/verifycheckboxExample1.xml' />
    </code>

    <b>A more complex scenario would allow multiple checkboxes that all have the same name but different values.
    The resulting request would also contain multiple value for one parameter (the checkbox name). Each of the
    parameter values corresponds to the value of a checked checkbox.
        <n/>
    In order to uniquely identify checkboxes like this for verification, an optional value attribute can be
    specified as shown in the next example.
    </b>

    <code caption="verifyCheckbox 2">
        <include src='examples/verifycheckboxExample2.xml' />
    </code>

    <b><em>See also</em>: the <stepref name="setCheckbox"/> and <stepref name="selectForm"/> steps.</b>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.control.IfStep</class>
                    <name>ifStep</name>
                    <category>Extension</category>
                    <description><![CDATA[Step which allows conditional execution of inner steps.]]></description>
                    <pre>
<b>
Provides the ability for conditional testing. The step takes either one of the two attributes
<em>test</em> and <em>unless</em>, or a single nested element <em>condition</em>.
Exactly one of these must have a value.</b>
<b>If the <em>test</em> attribute is set and evaluates to <em>true</em>, the
encapsulated steps will be executed. If the <em>unless</em> attribute is set
and evaluates to <em>false</em>, the intermediate steps will be executed.
</b>
<b>If there is a nested element <em>condition</em>, the intermediate steps will be executed
if all steps nested inside the <em>condition</em> are successful.</b>
<b>
<em>NOTE</em>: using this step too frequently can lead to overly
complicated and difficult to understand test scripts.
</b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>test</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Expression which if <em>true</em> should cause inner steps to be executed. One of <em>test</em> or <em>unless</em> should be set unless nested <em>condition</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>unless</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Expression which if <em>true</em> should cause inner steps NOT to be executed. One of <em>test</em> or <em>unless</em> should be set unless nested <em>condition</em> is used.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addCondition</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Group of steps which if <em>successful</em> should cause inner steps to be executed. Use instead of <em>test</em> or <em>unless</em> for more complex conditions.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addThen</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Group of steps which execute if the 'ifStep' condition passes. If neither 'then' or 'else' are explicitly set, any inner steps are treated as if they were in an implicit 'then' step.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addElse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Group of steps which execute if the 'ifStep' condition fails. If neither 'then' or 'else' are explicitly set, any inner steps are treated as if they were in an implicit 'then' step.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addOtherwise</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alias for else step.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

<b><em>Examples</em></b>

<b>Place the <em>&lt;ifStep&gt;</em> around other steps, e.g.:</b>

<code caption='ifStep example 1'>
    <include src='examples/ifStepExample1.xml' />
</code>

<b>If you are using <key>XSLT</key> reporting, you should see something like this:</b>

<b><img src="images/ifstep.gif"/></b>

<b>In this next scenario, we simply look for span statements within
the html of class 'debug' and if we find any we skip creating new users.
This example shows how we can use a nested condition, in addition to ant
or dynamic variables, to use more sophisticated tests.</b>

<code caption='ifStep example 2'>
 <include src='examples/ifStepExample2.xml' />
</code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.form.SetRadioButton</class>
                    <name>setRadioButton</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to check radio buttons in <key>HTML</key> forms.]]></description>
                    <pre>

    <b>The radio button to set will be determined by finding the appropriate form followed by
    finding the appropriate field on that form.</b>

    <b><em>Simple Form Selection</em>: in many cases, your page will only have
    one form - that form will be used - you don't need to worry about trying to select the form.</b>

    <b><em>Tricky Form Selection</em>: if no last response is available, the step fails.
    Otherwise, the form to use is chosen as follows:</b><dl>
        <li><dd>If an explicit <em>formName</em> is given and the named form has a suitable field, that is used.</dd></li>
        <li><dd>If the <em>current form</em> has been previously set and it has a suitable field, that is used.</dd></li>
        <li><dd>All forms from the last response are searched until one is found with a suitable field.</dd></li>
    </dl>
	<b>If no such form is found, the step fails. If a form is found, it is then considered as the <em>current form</em>
    for future steps.</b>

    <b><em>Simple Field Selection</em>: in many cases, only one field will match the <em>name</em> and <em>value</em>
    of the field you are interested in. In these cases, you don't need to worry about the remaining details
    for selecting fields.</b>

    <b><em>Tricky Field Selection:</em> if a suitable form is found, the field is chosen as follows:
    </b><dl>
        <li><dd>First find all potential fields on the selected form having the correct <em>name</em>.</dd></li>
        <li><dd>Remove any fields which don't match the specified <em>value</em> (if specified).</dd></li>
        <li><dd>Fail if no fields remain or if the specified <em>fieldIndex</em> doesn't correspond
        to any of the found fields (i.e. is out of range).</dd></li>
        <li><dd>If <em>fieldIndex</em> is specified, return the corresponding field.</dd></li>
        <li><dd>Return the first field found.</dd></li>
    </dl>

    <b><em>NOTE</em>: if you need, you can verify the value of a radio button using the
    <stepref name="storeInputFieldAttribute"/> step with <em>attributeName='checked'</em>.
    It should return <em>checked</em> if the radio button is checked and <em>false</em> otherwise.</b>

</pre>

                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The value to use to find the desired radio-button. Must be specified if <em>name</em> is specified.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An alternative to the attribute value for e.g. large TextAreas.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>forLabel</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text of the label field associated with the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default>the last form selected using 'selectForm', otherwise searches all forms</default>
                                <description><![CDATA[The name of the form containing the field of interest. Ignored if <em>htmlId</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default>the first field found that matches criteria</default>
                                <description><![CDATA[The index of the field of interest (starting at 0) if more than one field matches criteria. Ignored if <em>htmlId</em> or <em>xpath</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                    <post>

    <b><em>NOTE</em>: there is no facility to <em>unset</em> a radio button. This is not normally needed.
    When you set a radio button, all radio buttons with the same name in the same form are
    'unset' automatically. So either no radio buttons have been selected (if your application
    didn't provide a default) or exactly one is set. The only time you need to worry about
    the no radio button case is if your application doesn't provide a default. If this is the
    case, simply load the page in question, don't explicitly set any radio buttons, and
    perform your tests.</b>

    <b><em>Advanced Note</em>: strictly speaking it is possible that via greasemonkey scripts, proxies
    or other means, someone could maliciously (or via accident) remove a checked setting on a radio button
    even if your application always provided a default. So you should make your application do something
    graceful in those cases and we may need to eventually provide an <em>&lt;forceUnsetRadioButton&gt;</em>
    step to allow testing of this very rare scenario.</b>

    <b><em>See also</em>: the <stepref name="storeInputFieldAttribute"/> and <stepref name="selectForm"/> steps.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.EnableJavaScript</class>
                    <name>enableJavaScript</name>
                    <category>Extension</category>
                    <description><![CDATA[Provides the ability to activate / deactivate <key>javascript</key> support. (Javascript support is enabled by default)]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>enable</name>
                                <required>false</required>
                                <default>false</default>
                                <description><![CDATA[Indicates if JavaScript is enabled (true) or disabled (false).]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.ForceInputFieldAttribute</class>
                    <name>forceInputFieldAttribute</name>
                    <category>Extension</category>
                    <description><![CDATA[Sets (or removes) the attribute value of a selected input field. An example usage would be to enable a disabled input field (perhaps to mimic some unsupported <key>javascript</key>).]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>tagName</name>
                                <required>no</required>
                                <default>input</default>
                                <description><![CDATA[The name of the tag of interest, e.g. "input" or "select".]]></description>
                            </parameter>
                            <parameter>
                                <name>attributeName</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the attribute of interest, e.g. "disabled" or "checked".]]></description>
                            </parameter>
                            <parameter>
                                <name>attributeValue</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The value to set for the attribute of interest; causes the attribute to be removed if set to the empty string (i.e. "").]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The value to use when setting the field of interest.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An alternative to the attribute value for e.g. large TextAreas.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>forLabel</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text of the label field associated with the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default>the last form selected using 'selectForm', otherwise searches all forms</default>
                                <description><![CDATA[The name of the form containing the field of interest. Ignored if <em>htmlId</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default>the first field found that matches criteria</default>
                                <description><![CDATA[The index of the field of interest (starting at 0) if more than one field matches criteria. Ignored if <em>htmlId</em> or <em>xpath</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                    <post>

    <b>Consider the following <key>HTML</key> form:</b>

    <code caption='inputFieldAttributePage.html'>
    <include src='examples/forceInputFieldAttributePageHtml.xml' />
    </code>

    <b>This page contains some <key>javascript</key> validation. We would like to use the <stepref name="storeInputFieldAttribute"/>
    step to check that the validation is working. When the form is first loaded, the "Click Me" button should
    be disabled as the "value1" field is empty. We can then place some content into the field. However
    because the onkeyup <key>javascript</key> event is not supported, we note that the "Click Me" button is still
    disabled. We can use the <em>&lt;forceInputFieldAttribute&gt;</em> to force the button to become enabled.
    For the enabled attribute, we need to remove the "disabled" attribute to enable the button. We do this
    by setting the "attributeValue" to the empty string "".
    Here is the script code:</b>

    <code caption='forceInputFieldAttribute Example'>
        <include src='examples/forceInputFieldAttributeExample.xml'/>
    </code>

    <b><em>See also</em>: the <stepref name="storeInputFieldAttribute"/> step.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.ReplaceContentFilter</class>
                    <name>replaceFilter</name>
                    <category>Filter</category>
                    <description><![CDATA[Replaces part of a response with some constant data. For use with steps which take a <em>ContentFilter</em>.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The regex matching content to replace.]]></description>
                            </parameter>
                            <parameter>
                                <name>replacement</name>
                                <required>no</required>
                                <default>[REMOVED]</default>
                                <description><![CDATA[The regex replacement string.]]></description>
                            </parameter>
                    <post>

    <b>See the <stepref name="verifyContent"/> step for some examples of using this content filter.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.dialogs.VerifyNoDialogs</class>
                    <name>verifyNoDialogs</name>
                    <category>Extension</category>
                    <description><![CDATA[Used in conjunction with the <stepref name='expectDialog' category='Extension'/> and <stepref name='expectDialogs' category='Extension'/> steps when dealing with <key>javascript</key> Dialog boxes. This step checks that all user responses expected were in fact "consumed" by <key>javascript</key>.]]></description>
                    <pre>

    <b>The <em>&lt;verifyNoDialogs&gt;</em> step is used after clicking on a link or button
    which invokes some <key>javascript</key> that uses dialogs (Alert, Confirm or Prompt dialogs).
    It is used in conjunction with the <stepref name="expectDialogs"/> step which sets up
    dialog expectations prior to clicking the link or button. Invoking this step
    after the click request allows you to check that all expected responses were
    in fact used by the <key>javascript</key>.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                    <post>

    <b>See the <stepref name="expectDialogs"/> step for examples.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyBookmarkStep</class>
                    <name>pdfVerifyBookmark</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the existence of a bookmark within a <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the bookmark to find.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the name represents a <key>regex</key>.]]></description>
                            </parameter>
                    <post>
    <b>
        Here is an example of using <em>pdfVerifyBookmark</em>:
    </b>

    <code caption='pdfVerifyBookmark example'>
        <include src='pdfexamples/verifyBookmarkExample.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.store.StoreRegExMatch</class>
                    <name>storeRegEx</name>
                    <category>Core</category>
                    <description><![CDATA[This step stores the result of a <key>regex</key> into a property. By specifying a particular group of the <key>regex</key> it is easily to extract only a subset of a given <key>regex</key>.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>text</name>
                                <required>true</required>
                                <default></default>
                                <description><![CDATA[The <key>regex</key> that shall be evaluated.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>true</required>
                                <default></default>
                                <description><![CDATA[The name of the property that shall receive the extracted value.]]></description>
                            </parameter>
                            <parameter>
                                <name>group</name>
                                <required>no</required>
                                <default>0 (result of the whole expression)</default>
                                <description><![CDATA[The group within the <key>regex</key> to extract into the specified property.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>The following example extracts a URL from a <key>javascript</key> statement associated with an <em>onclick</em> event handler.</b>

    <code caption="storeRegEx">
        <include src='examples/storeregexExample.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.VerifyContent</class>
                    <name>verifyContent</name>
                    <category>Extension</category>
                    <description><![CDATA[Compares the current response with an expected file. Supports content filters such as <stepref name='lineSeparatorFilter'/> and <stepref name='replaceFilter'/> and the nested <stepref name='table' category='Core'/> step.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>mode</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The diff mod to use for comparison. Possible values are "auto" (the default, uses "text" or "bin" depending on the type of the content to compare), "text" (performs a unified diff like diff), "bin" (compares byte per byte and displays differences in hex format), and "regexPerLine" (each line of the reference file is a regex that should match the actual content).]]></description>
                            </parameter>
                            <parameter>
                                <name>referenceFile</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The file to compare to]]></description>
                            </parameter>
                            <parameter>
                                <name>readFiltered</name>
                                <required>no</required>
                                <default>true</default>
                                <description><![CDATA[Indicates that when reading <em>referenceFile</em> that the content should be filtered.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The id of an <key>HTML</key> element. If present, processing will be limited to this element. Will be ignored if a nested <stepref name='table'/> step is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An XPath expression identifying an <key>HTML</key> element. If present, processing will be limited to this element. Will be ignored if <em>htmlId</em> is set or if a nested <stepref name='table'/> step is used.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addTable</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[To locate a specific cell in a specific table on the page.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <b>The following example illustrates how to use the <em>verifyContent</em> step (illustrating the use of the
        nested regular expression replacement filters to remove dynamically changing content which would otherwise make
        the comparison fail):</b>

    <code caption="verifyContent example">
        <include src='examples/verifyContentExample.xml'/>
    </code>

    <b>If the files differ, you should see a message indicating the differences in your logs (depending
    on what logging levels you have set), for example:</b>

    <code caption="verifyContent error">
        <include src='examples/verifyContentError.xml'/>
    </code>

    <b><em>See also</em>: the <stepref name="storeDigest"/>,
        <stepref name="storeLength"/>,
        <stepref name="lineSeparatorFilter"/>,
        <stepref name="replaceFilter"/>,
        <stepref name="tagStripper"/> and
        <stepref name="contentStripper"/> steps.
    </b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.control.NotStep</class>
                    <name>not</name>
                    <category>Core</category>
                    <description><![CDATA[This step encapsulates one or more test steps that are ALL expected to fail. Any kind of step can be nested.]]></description>
                    <pre>

    <b>This is useful when checking that something should not occur,
    e.g. in order to verify that a particular button or combo box is <em>not</em>
    present in the current page or that a particular value is <em>not</em> in an input field
    after the resetting the form.</b>

    <b>If more than one step is included in the <em>&lt;not&gt;</em> test step,
    <em>all</em> included steps must fail. The <em>&lt;not&gt;</em> test step can
    include other <em>&lt;not&gt;</em> test steps.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <code caption="not">
        <include src='examples/notExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.dialogs.ConfirmDialogStep</class>
                    <name>confirm</name>
                    <category>Extension</category>
                    <description><![CDATA[Provides the ability to set expectations in relation to user responses to <key>javascript</key> Confirm Dialog boxes. Must be nested within the <stepref name='expectDialogs'/> step.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>saveProperty</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the dialog text for later checking with "verifyProperty". Must not be set if <em>text</em> is also set.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePropertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the dialog text for later checking. Either "ant" or "dynamic". Ignored if <em>saveProperty</em> is not set.]]></description>
                            </parameter>
                            <parameter>
                                <name>response</name>
                                <required>no</required>
                                <default>true</default>
                                <description><![CDATA[simulate user response: ignored for alerts; converted to boolean for confirms - "OK" (true) or "Cancel" (false); contains typed text for prompts.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyLinks</class>
                    <name>verifyLinks</name>
                    <category>Core</category>
                    <description><![CDATA[This step checks the validity of all links on the current page. Non-<key>HTML</key> pages (CSS, <key>javascript</key>, <key>XML</key> files) are not checked for internal links. Non-<key>HTTP</key> links (mail addresses, ftp etc.) are not checked or followed.]]></description>
                    <pre>

    <b>You can use this test recursively, so you can also check the links on the pages,
    which are linked on the current page and so on. For this reason, you can specify the <em>depth</em> parameter.</b>

    <b>To avoid scanning sub-links on other hosts, you can set the <em>onsiteonly</em> parameter.
    If it is set to &quot;true&quot;, only the first link on a foreign host is checked for validity.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>depth</name>
                                <required>no</required>
                                <default>0</default>
                                <description><![CDATA[The <em>depth</em> parameter defines the depth of the recursive search for broken links on sub-pages.]]></description>
                            </parameter>
                            <parameter>
                                <name>excludes</name>
                                <required>no</required>
                                <default>&lt;empty&gt;</default>
                                <description><![CDATA[If <em>excludes</em> is set then each link found is compared to the defined string (via regexp), if it matches then the link is not followed.]]></description>
                            </parameter>
                            <parameter>
                                <name>includes</name>
                                <required>no</required>
                                <default>&lt;all&gt;</default>
                                <description><![CDATA[If <em>includes</em> is set then each link found is compared to the defined string (via regexp), if it matches then the link is processed, others are ignored.]]></description>
                            </parameter>
                            <parameter>
                                <name>onsiteonly</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[If <em>onsiteonly</em> is set to <em>true</em>, the recursive search for invalid links is limited to the local host. Only the initial link to a foreign host is checked, but no deeper search is performed.]]></description>
                            </parameter>
                            <parameter>
                                <name>ignoreForeignJSErrors</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Indicates if JavaScript errors should be ignored on visited pages from a different host than the current page.]]></description>
                            </parameter>
                    <post>

		<code caption="Don't forget invoke before verification">
			<include src='examples/verifylinksExample1.xml' />
		</code>
		<code>
			<include src='examples/verifylinksExample2.xml' />
		</code>
		<code>
			<include src='examples/verifylinksExample3.xml' />
		</code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.extension.ApplyFilters</class>
                    <name>applyFilters</name>
                    <category>Filter</category>
                    <description><![CDATA[Applies one or more filters to the current response and treats the result as if it was a new response.]]></description>
                    <pre>

    <b>This step allows you to apply one or more filter(s) to the current response
    and then perform some simple tests on the result as if the filtered result
    is a new response.</b>
    <b>This step should be treated as experimental. It does a few hacks under the covers
    but has been very useful for debugging purposes. If you use this step, a recommended
    approach is to not perform subsequent invokes after this step, i.e. this step should
    be near the end of your test sequence.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The id of an <key>HTML</key> element. If present, processing will be limited to this element. Will be ignored if a nested <stepref name='table'/> step is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An XPath expression identifying an <key>HTML</key> element. If present, processing will be limited to this element. Will be ignored if <em>htmlId</em> is set or if a nested <stepref name='table'/> step is used.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addTable</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[To locate a specific cell in a specific table on the page.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <b>The following example illustrates how to use the <em>applyFilters</em> step:</b>

    <code caption="applyFilters example">
        <include src='examples/applyFiltersExample.xml'/>
    </code>

    <b>Remember that the resulting filtered response doesn't correspond to what
    your application is actually producing so keep your usage of this step
    to a minimum.</b>

    <b><em>See also</em>: the
        <stepref name="verifyContent"/>,
        <stepref name="storeDigest"/>,
        <stepref name="storeLength"/>,
        <stepref name="lineSeparatorFilter"/>,
        <stepref name="replaceFilter"/>,
        <stepref name="tagStripper"/> and
        <stepref name="contentStripper"/> steps.
    </b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyInfoPropertyStep</class>
                    <name>pdfVerifyInfoProperty</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies a property from the <em>info</em> dictionary of the current <key>pdf</key> document. The step must either verify the existence of the <em>info</em> dictionary property key or it must verify its value.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>key</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The key of the property of interest from the <em>info</em> dictionary. Typically one of <em>Title</em>, <em>Author</em>, <em>Subject</em>, <em>Keywords</em>, <em>Creator</em>, <em>Producer</em>, <em>CreationDate</em> or <em>ModDate</em>]]></description>
                            </parameter>
                            <parameter>
                                <name>exists</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Specifies whether the property/field of interest is expected to exist or not. Must not be set if 'value' attribute is set.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text/<key>regex</key> required to match the property/field of interest. Must not be set if 'exists' attribute is set.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyInfoProperty 1">
        <include src='pdfexamples/verifyInfoPropertyExample1.xml' />
    </code>

    <code caption="pdfVerifyInfoProperty 2">
        <include src='pdfexamples/verifyInfoPropertyExample2.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyFieldStep</class>
                    <name>pdfVerifyField</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the existence of a field in a <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>page</name>
                                <required>no</required>
                                <default>all the pages</default>
                                <description><![CDATA[The page to restrict the verification to.]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The field name.]]></description>
                            </parameter>
                            <parameter>
                                <name>exists</name>
                                <required>no</required>
                                <default>true</default>
                                <description><![CDATA[Specifies whether the field is expected to exist or not.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyField">
        <include src='pdfexamples/verifyFieldExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyText</class>
                    <name>verifyText</name>
                    <category>Core</category>
                    <description><![CDATA[This step verifies the existence of the specified string somewhere in the response received from server (ie the changes that may have occured since the page has been loaded are not seen by this step). The text could represent an <key>HTML</key> fragment like "<BODY>" or a arbitrary static text in the page ("An application error has occurred!").]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alternative way to set the 'text' attribute.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addTable</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[To locate a specific cell in a specific table on the page.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                    <post>

    <code caption="verifyText example1">
        <include src='examples/verifytextExample1.xml'/>
    </code>

    <code caption="verifyText example2">
        <include src='examples/verifytextExample2.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.extension.StoreResponseCode</class>
                    <name>storeResponseCode</name>
                    <category>Extension</category>
                    <description><![CDATA[Provides the ability to store the <key>HTTP</key> Response Code value for later checking.]]></description>
                    <pre>
	<b>Normally, you can safely ignore <key>HTTP</key> response codes while using <key>CWT</key>.
    Simply try to use web resources normally in your tests. Any which can't be retrieved normally
    (i.e. which don't return <key>HTTP</key> status code of '200') will cause your steps to fail.</b>

    <b>Sometimes however, it is useful to retrieve the response code, e.g. to distinguish
    between server errors (typically code '500'), missing resources (code '404') and security
    issues (typically codes 401 or 403). Or perhaps to verify the messages which these kind of errors
     display to the user. This step allows you to achieve this requirement. In order for <key>CWT</key>
    to not report non-'200' status codes as an error, you need to set an option (see below).</b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the Response Code value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b><em>NOTE</em>: the <em>ThrowExceptionOnFailingStatusCode</em> option setting
    in the <stepref name="config"/> element needs to be set to <em>false</em>. You don't
    need to set this option if you want to test for return status codes of '200' but if
    the step doesn't fail, you already know it is a '200' status code.</b>

    <code caption='storeResponseCode Example'>
        <include src='examples/storeResponseCodeExample.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyFontStep</class>
                    <name>pdfVerifyFont</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the existence of a font within the current <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the font to find, e.g. <em>Times</em>, <em>Courier-Bold</em> or <em>Helvetica-Oblique</em>. One of <em>name</em> or <em>type</em> must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>type</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The type of the font to find, e.g. <em>Type 1</em> or <em>TrueType</em>. One of <em>name</em> or <em>type</em> must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>page</name>
                                <required>no</required>
                                <default>all pages</default>
                                <description><![CDATA[The page on which to search.]]></description>
                            </parameter>
                            <parameter>
                                <name>matchCase</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether to match case when comparing the expected and actual name and type values of a font.]]></description>
                            </parameter>
                    <post>
    <b>
        Here is an example of using <em>pdfVerifyFont</em>:
    </b>

    <code caption='pdfVerifyFont example'>
        <include src='pdfexamples/verifyFontExample.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailStoreHeader</class>
                    <name>emailStoreHeader</name>
                    <category>Email</category>
                    <description><![CDATA[Stores the value of a message (or message part) header field into a property.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>headerName</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the header of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>partIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index of the message part of interest. If set for a <em>Simple</em> message, will cause the step to fail. If set for a MIME <em>MultiPart</em> message will retrieve headers related to the message part instead of headers of the message itself.]]></description>
                            </parameter>
                            <parameter>
                                <name>messageId</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The message id.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The target property name.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The target property type. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <code caption="emailStoreHeader">
        <include src='emailexamples/emailStoreHeaderExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyElement</class>
                    <name>verifyElement</name>
                    <category>Core</category>
                    <description><![CDATA[This step verifies the existence of a particular <key>HTML</key> element (tag) in the result page. It is identified by its <key>HTML</key> element type (e.g. TITLE, HEAD, etc.) and the <em>text</em> value of the NAME attribute.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>type</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyCheckboxFieldStep</class>
                    <name>pdfVerifyCheckboxField</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies a checkbox field in a <key>pdf</key> document. According to the <key>pdf</key> specification, fields with the same name must have the same value.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The checkbox field name.]]></description>
                            </parameter>
                            <parameter>
                                <name>page</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The page to restrict the verification to.]]></description>
                            </parameter>
                            <parameter>
                                <name>exists</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Specifies whether the property/field of interest is expected to exist or not. Must not be set if 'value' attribute is set.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text/<key>regex</key> required to match the property/field of interest. Must not be set if 'exists' attribute is set.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyCheckboxField Example 1">
        <include src='pdfexamples/verifyCheckboxFieldExample1.xml'/>
    </code>

    <code caption="pdfVerifyCheckboxField Example 2">
        <include src='pdfexamples/verifyCheckboxFieldExample2.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailStoreMessageId</class>
                    <name>emailStoreMessageId</name>
                    <category>Email</category>
                    <description><![CDATA[Stores the message id (optionally matching specific criteria) of a particular message.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>messageIndex</name>
                                <required>no</required>
                                <default>0, the first message</default>
                                <description><![CDATA[The messageIndex if more than one message match.]]></description>
                            </parameter>
                            <parameter>
                                <name>subject</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email Subject header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>from</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email From header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>to</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email To header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>cc</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email Cc header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>replyTo</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email ReplyTo header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The target property name.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The target property type. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>
        Here is an example of using the <em>emailStoreMessageId</em> step.
    </b>

    <code caption="emailStoreMessageId">
        <include src='emailexamples/emailStoreMessageIdExample.xml'/>
    </code>

    <b>
        Note that <em>subject</em> and the email address attributes
        (<em>to</em>, <em>from</em>, <em>cc</em> and <em>replyTo</em>)
        are used for matching purposes to select a subset of the available messages.
        Each can be either plain text (like <em>subject</em> and <em>from</em>
        in the above example) or a <key>regex</key> (like <em>to</em>, <em>cc</em>
        and <em>replyTo</em> in the above example).
        Simply start and end them with the "/" character to make them a <key>regex</key>.
        If all of these are left blank, all messages will be selected (and you can use
        <em>messageIndex</em> to select a particular message if you know its position).
        In addition, <em>to</em>, <em>cc</em> and <em>replyTo</em> may contain
        a comma (",") separated list of email addresses. Each address must appear
        in an email message for it to match - order is not important.
    </b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.NormalizeXmlFilter</class>
                    <name>normalizeXml</name>
                    <category>Filter</category>
                    <description><![CDATA[Normalizes XML content.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                    <post>

    <b>This filter returns a pretty-printed version of an XML file. More technically, it calls the normalize()
        method on the root DOM Node (see standard Java javadocs related to this if you are curious) and then serializes
        the resultant Node tree using an output formatter. This can be useful when testing e.g. Web Services which
        often compress whitespace of the output.</b>

    <b>As an example, for the following XML input file:</b>

    <code caption="normalizeXml input">
        <include src='examples/normalizeXmlInput.xml'/>
    </code>

    <b>The normalized output would be:</b>

    <code caption="normalizeXml output">
        <include src='examples/normalizeXmlOutput.xml'/>
    </code>

    <b>See also the <stepref name="verifyContent"/> step for an example illustrating
        the use of content filters.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.exceltest.ExcelFindRow</class>
                    <name>excelFindRow</name>
                    <category>Excel</category>
                    <description><![CDATA[This step allows you to find a specific row on a sheet. This is useful for using with repeat when you don't know how many rows there will be on a table. It starts from a specified cell and searches down for a row matching the given text in an Excel spreadsheet and saves the resulting row as a property.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>startRow</name>
                                <required>no</required>
                                <default>1</default>
                                <description><![CDATA[The row to start searching from]]></description>
                            </parameter>
                            <parameter>
                                <name>col</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The column reference (eg. 'B' or '2') to search in.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to search for. Will be treated as a regex if surrounded with '/'s (eg '/test\d+/')]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the sheet to select. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index of the sheet to select, starting at zero. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                    <post>
    <b>
        Here is an example of using <em>excelFindRow</em>:
    </b>

    <code caption='excelFindRow example'>
        <include src='excelExamples/findRowExample.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.extension.groovy.GroovyStep</class>
                    <name>groovy</name>
                    <category>Extension</category>
                    <description><![CDATA[Executes the provided Groovy script (the binding is the same for all groovy steps within a webtest).]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>replaceProperties</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Indicates if properties (${...} and #{...}) present in the script should be replaced by their value. Use carefully as ${...} is although the syntax for GString.]]></description>
                            </parameter>
                            <parameter>
                                <name>file</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the file containing the script code. You may omit this parameter if you have embedded script code.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The script to execute. You may omit this if you use the attribute file.]]></description>
                            </nestedParameter>
                    <post>
    <b>When you are supplying the scripting code you can define methods and variables
        as needed. In addition, you can call any of the Java methods which would be available
        to the <em>&lt;groovy&gt;</em> step. See the API documentation for WebTest to determine
        what method calls are available.</b>
    <b>As an example, the <em>GroovyStep</em> class extends
        the <em>Step</em> class which has a <em>getContext()</em> method which returns the
        current <em>Context</em> which has a method <em>getCurrentResponse()</em> which
        returns the current response which has a method <em>getDocumentElement()</em>.
        In groovy you can just use <em>step.context.currentResponse.documentElement</em> to
        return the current HTML document.</b>
    <b>In addition to the functionality available to the <em>GroovyStep</em> class, there
        are additional convenience variables <em>step</em> and <em>out</em> available to let
        the script access itself or its log respectively.</b>

    <dl>
        <li>
            <dt>step</dt>
            <dd>The groovy step itself.</dd>
        </li>
        <li>
            <dt>out</dt>
            <dd>Mapped to step's log (at the debug level).</dd>
        </li>
    </dl>

    <b>Note that the groovy step does not provide all the convenience variables provided by scriptStep.
        The value of the missing variables are easily computed as follows:</b>

    <dl>
        <li>
            <dt>document, for an html page</dt>
            <dd>step.context.currentResponse.documentElement</dd>
            <dt>document, for an xml page</dt>
            <dd>step.context.currentResponse.xmlDocumentElement</dd>
            <dt>response</dt>
            <dd>step.context.currentResponse.webResponse</dd>
        </li>
    </dl>

    <b>
        The examples reuse the scenario of the
        <stepref name="scriptStep" category="Extension"/>
        .
    </b>

    <b>
        <em>Order Example</em>
    </b>

    <code caption="OrderTest">
        <include src="examples/groovyStepOrderExample.xml"/>
    </code>

    <b>
        <em>Traffic Light Example</em>
    </b>

    <code caption="GroovyTrafficLightTest">
        <include src="examples/groovyStepTrafficLightExample.xml"/>
    </code>

    <b>Rather than having the scripting code inline, you can place
        it in a file and reference that file as follows:</b>

    <code caption="GroovyFileTrafficLightTest">
        <include src="examples/groovyStepTrafficLightFileExample.xml"/>
    </code>
</post>

                </step>
                <step>
                    <class>com.canoo.webtest.extension.ContentStripperFilter</class>
                    <name>contentStripper</name>
                    <category>Filter</category>
                    <description><![CDATA[Removes all content within well-formed XML/XHTML leaving only tags.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                    <post>

    <b>This content filter can be useful in environments where the tags stay the same but content may
        change, e.g. a home page with a fixed number of news items - the content of news items change
        but the tags and other document structure stay the same. This tag removes content hence removes the
    part of the response subject to change. The remaining characters can then be safely compared to an expected value.</b>

    <b>See the <stepref name="verifyContent"/> step for an example of using this content filter.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyElementText</class>
                    <name>verifyElementText</name>
                    <category>Core</category>
                    <description><![CDATA[This step verifies whether the <key>HTML</key> element specified by <em>htmlId</em> or <em>type</em> and optional <em>name</em> encloses <em>text</em> between its opening and closing tags.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the element, i.e. the value of the 'name' attribute. Ignored if using 'htmlId'.]]></description>
                            </parameter>
                            <parameter>
                                <name>type</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The HTML element (tag) name. One of 'htmlId' or 'type' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The HTML htmlId of the element. One of 'htmlId' or 'type' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                    <post>

    <code caption="verifyElementText example">
        <include src='examples/verifyelementtextExample.xml' />
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.form.SetInputField</class>
                    <name>setInputField</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to update text-oriented input fields in <key>HTML</key> forms (supports input fields of type <em>text</em> and <em>password</em> as well as <em>textareas</em>).]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The value to use when setting the field of interest.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An alternative to the attribute value for e.g. large TextAreas.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>forLabel</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text of the label field associated with the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default>the last form selected using 'selectForm', otherwise searches all forms</default>
                                <description><![CDATA[The name of the form containing the field of interest. Ignored if <em>htmlId</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default>the first field found that matches criteria</default>
                                <description><![CDATA[The index of the field of interest (starting at 0) if more than one field matches criteria. Ignored if <em>htmlId</em> or <em>xpath</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.spider.ReportLinksStep</class>
                    <name>reportLinks</name>
                    <category>Extension</category>
                    <description><![CDATA[Spider-like visit of all the pages.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailSetConfig</class>
                    <name>emailSetConfig</name>
                    <category>Email</category>
                    <description><![CDATA[Sets Email Configuration information.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>server</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The email server (including port if required).]]></description>
                            </parameter>
                            <parameter>
                                <name>type</name>
                                <required>no</required>
                                <default>pop3</default>
                                <description><![CDATA[The email server type (only 'pop3' has been tested).]]></description>
                            </parameter>
                            <parameter>
                                <name>delay</name>
                                <required>no</required>
                                <default>0</default>
                                <description><![CDATA[The delay between email steps in seconds - sometimes helps with email servers which are fussy about multiple logins.]]></description>
                            </parameter>
                            <parameter>
                                <name>username</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The email account username. Probably required for your steps to work. Might be set using a system property.]]></description>
                            </parameter>
                            <parameter>
                                <name>password</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The email account password. Probably required for your steps to work.]]></description>
                            </parameter>
                    <post>

    <b>
        Here is an example of using <em>emailSetConfig</em>.
    </b>

    <code caption="emailSetConfig">
        <include src='emailexamples/emailSetConfigExample.xml'/>
    </code>

    <b>
        The <em>delay</em> attribute is a convenience mechanism
        that has the same effect as putting a <stepref name="sleep" category="core"/>
        in front of all of your <em>email</em> steps. This is
        provided because many email servers have issues with
        opening connections immediately after the previous one has
        been closed. If you steps are failing in an unexpected fashion,
        turn on debugging - if it shows that sometimes fewer messages
        are on your email server than you expect, try increasing
        the delay value. If that doesn't work, you can try placing your
        step(s) within a <stepref name="retry" category="extension"/> loop.
    </b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfDecryptDocumentStep</class>
                    <name>pdfDecryptDocument</name>
                    <category>PDF</category>
                    <description><![CDATA[This step decrypts the current <key>pdf</key> document. It fails if the <key>pdf</key> document is not encrypted or if the password is wrong. After decrypting the <key>pdf</key> document, it will be available in its decrypted state for later <key>pdf</key> test steps.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>password</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text required to decrypt the PDF document.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfDecryptDocument">
        <include src='pdfexamples/decryptDocumentExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyHeader</class>
                    <name>verifyHeader</name>
                    <category>Extension</category>
                    <description><![CDATA[Verifies that the current response contains the specified <key>HTTP</key> Header.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the Http Response Header of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The expected header value.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alternative way to set both name and text attributes separated by a semicolon like "Content-Type: text/html".]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyRadioButton</class>
                    <name>verifyRadioButton</name>
                    <category>Core</category>
                    <description><![CDATA[This step is used to verify the state of a radio button (checked/unchecked). A particular radio button can be specified via <em>name</em> and optionally <em>value</em> (or alternatively by <em>fieldIndex</em>).]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>checked</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[Specifies if the radio button shall be checked (true) or unchecked (false).]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The value of the input field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the form containing the field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index (starting at 0) of the field of interest (if more than one).]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.request.InvokePage</class>
                    <name>invoke</name>
                    <category>Core</category>
                    <description><![CDATA[This step executes a request to a particular URL.]]></description>
                    <pre>

    <b>If the URL starts with a protocol (e.g. http://...) then the URL is treated is being fully qualified
    and invoked directly. Otherwise, the URL is treated as a relative suffix and the URL to invoke is
    determined from the settings specified with the <stepref name="config"/> element, including
    <em>port</em>, <em>protocol</em> and <em>basepath</em>.</b>

    <b>The result of the request is internally stored and its contents can be
    verified with one or more <em>&lt;verify...&gt;</em> steps.
    If the <em>saveresponse</em> option in the <stepref name="config"/> element is
    enabled, the result (<key>HTML</key> source) will be written to a file for later viewing.</b>

    <b><em>Note:</em> If the URL contains an ampersand character (&amp;), e.g. for
    parameter separation, it must be expressed using the XML element notion with
    &quot;&amp;amp;&quot;.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An alternative way to set the 'url' or the 'content' attribute. When the 'url' attribute is not specified the nested text is considered as the url value. Otherwise this is used to set the 'content' attribute for e.g. large content (properties get evaluated in this content).]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>url</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A complete URL or the 'relative' part of an URL which will be appended to the 'static' parts created from the configuration information defined with the <config> step.]]></description>
                            </parameter>
                            <parameter>
                                <name>contentType</name>
                                <required>no</required>
                                <default>application/x-www-form-urlencoded</default>
                                <description><![CDATA[Sets the content-type HTTP header for POST and PUT requests]]></description>
                            </parameter>
                            <parameter>
                                <name>method</name>
                                <required>no</required>
                                <default>GET</default>
                                <description><![CDATA[Sets the HTTP Method, i.e. whether the invoke is a GET, POST, PUT, etc.]]></description>
                            </parameter>
                            <parameter>
                                <name>contentFile</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Filename to extract request contents from. Ignored for GET requests. Only one of <em>content</em> and <em>contentFile</em> should be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>content</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Form data in 'application/x-www-form-urlencoded' format, which will be sent in the body of a POST request. Ignored for GET requests. Only one of <em>content</em> and <em>contentFile</em> should be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>soapAction</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[If the HTTP method is POST and is in fact a SOAP POST request, this allows the SOAP Action header to be set. Ignored for GETs.]]></description>
                            </parameter>
                            <parameter>
                                <name>username</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A username that can be provided for pages that require basic authentication. Typically only needed on the first step of any <stepref name='webtest'/> accessing a secure site. Required if <em>password</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>password</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A password that can be provided for pages that require basic authentication. Required if <em>username</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                    <post>

    <b>Here is an example of a normal invoke:</b>

    <code caption="invoke">
        <include src='examples/invokeExample.xml'/>
    </code>

    <b>Here is an example of a SOAP invoke:</b>

    <code caption="invoke">
        <include src='examples/invokePostExample.xml'/>
    </code>

    <b>
        Note: the <em>soapAction</em> attribute is only needed for
        SOAP Web Service requests. For RESTful web services or to do an
        invoke of a tricky form normally submitted through JavaScript
        you can leave it out.
    </b>

    <b>Here is what the <em>AustralianPostcodeByLocationRequest.xml</em> file
    contents might look like:</b>

    <code caption="invoke">
        <include src='examples/invokePostInput.xml'/>
    </code>

    <b>And the result might look something like:</b>

    <code caption="invoke">
        <include src='examples/invokePostOutput.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.control.RetryStep</class>
                    <name>retry</name>
                    <category>Extension</category>
                    <description><![CDATA[This step encapsulates one or more test steps that should pass eventually but may fail initially. Any kind of step can be nested.]]></description>
                    <pre>

    <b>The actual repetition counter is made available to the steps included in the
    <em>&lt;retry&gt;</em> step by a special property. Its default name
    is &quot;count&quot; unless modified by the <em>counterName</em> attribute.
    This property can be referenced within(!) steps included in the <em>&lt;retry&gt;
    </em> step using this notation &quot;#{count}&quot; or the specified countername.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>counterName</name>
                                <required>no</required>
                                <default>count</default>
                                <description><![CDATA[The name that shall be used to reference the current repetition counter.]]></description>
                            </parameter>
                            <parameter>
                                <name>maxcount</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The number of times to try running the included steps. Counter values start at 0 and go up to count-1.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <b>The following example illustrates re-loading a page with a visit counter several
    times until a particular value is reached. A typical scenario would be to check that
    some asynchronous task has completed.</b>

    <code caption="Retry Example">
        <include src='examples/retryExample.xml' />
    </code>

    <b>If you are using <key>XSLT</key> reporting, you might expect to see something like:</b>

    <b><img src="images/retry_reporting.gif"/></b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyEncryptionPermissionsStep</class>
                    <name>pdfVerifyEncryptionPermissions</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies encryption permissions of an encrypted <key>pdf</key> document.]]></description>
                    <pre>

    <b>
        Valid permission names include:
        <em>printing</em>,
        <em>degradedPrinting</em>,
        <em>modifyContents</em>,
        <em>copy</em>,
        <em>modifyAnnotations</em>,
        <em>fillIn</em>,
        <em>screenReaders</em> and
        <em>assembly</em>.
    </b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>allow</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The comma-separated list of permissions which must be allowed (from 'printing', 'degradedPrinting', 'modifyContents', 'copy', 'modifyAnnotations', 'fillIn', 'screenReaders', 'assembly'). Must be set if <em>deny</em> is not set.]]></description>
                            </parameter>
                            <parameter>
                                <name>deny</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The comma-separated list of permissions which must be disallowed (from 'printing', 'degradedPrinting', 'modifyContents', 'copy', 'modifyAnnotations', 'fillIn', 'screenReaders', 'assembly'). Must be set if <em>allow</em> is not set.]]></description>
                            </parameter>
                    <post>

    <b>
        Here is an example of using the
        <em>pdfVerifyEncryptionPermissions</em>
        step:
    </b>

    <code caption="pdfVerifyEncryptionPermissions Example">
        <include src='pdfexamples/verifyEncryptionPermissionsExample.xml'/>
    </code>

    <b>
        Note: the document permissions don't always exactly match up with what
        Acrobat Reader (or potentially other PDF browsers) display for you when
        you examine document properties. Sometimes Acrobat Reader will
        automatically prohibit one or more of the permissions and mask
        the desired permission setting contained within the document.
        This step only uses the value found within the document.
    </b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.control.GroupStep</class>
                    <name>group</name>
                    <category>Core</category>
                    <description><![CDATA[This step allows grouping and giving a description to a sequence of nested steps. Any kind of step can be nested.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyEncryptionStrengthStep</class>
                    <name>pdfVerifyEncryptionStrength</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the encryption strength of an encrypted <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>strength</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The numeric value required to match the encryption strength.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyEncryptionStrength">
        <include src='pdfexamples/verifyEncryptionStrengthExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.request.ClickLink</class>
                    <name>clickLink</name>
                    <category>Core</category>
                    <description><![CDATA[This step tries to locate a link (like <a href='thisIsAnotherPage.html'>Follow me</a>) and to click on it. The page where this click leads to will be the current one for further actions.]]></description>
                    <pre>
	<b>The different ways to locate a link are applied in this sequence:</b>
	<dl>
		<li>
			<dd>If
				<em>htmlid</em>
				is set: the link with the given id is used (and the step fails if no link is found with this id)
			</dd>
		</li>
		<li>
			<dd>Else the first link containing the specified
				<em>label</em>
				(if specified) and
				<em>href</em>
				(if specified) is used
			</dd>
		</li>
		<li>
			<dd>If not found, the first link containing an image (IMG) tag with
				<em>label</em>
				as the ALT attribute is used (
				<em>href</em>
				is ignored)
			</dd>
		</li>
	</dl>
</pre>

                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>href</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[A substring of the <key>HTML</key> anchor tag's HREF attribute for the link of interest. Useful if (part of the <em>href</em>) uniquely identifies a link (for example, a unique parameter/value pair in the <em>href</em>). Also, useful for distinguisking between links with the same labels (in which case, use <em>label</em> and <em>href</em> combined). Either <em>label</em>, <em>href</em> or <em>htmlId</em> is required. Href has the lowest precedence.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alternative way to set the 'label' attribute.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>label</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The label of the element to click. One of 'label', 'htmlid' or 'xpath' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The htmlId of the element to click. One of 'label', 'htmlid' or 'xpath' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the element to click. One of 'label', 'htmlid' or 'xpath' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>username</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A username that can be provided for pages that require basic authentication. Typically only needed on the first step of any <stepref name='webtest'/> accessing a secure site. Required if <em>password</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>password</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A password that can be provided for pages that require basic authentication. Required if <em>username</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                    <post>

    <code caption="clickLink">
        <include src='examples/clicklinkExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.request.SelectWindow</class>
                    <name>selectWindow</name>
                    <category>Extension</category>
                    <description><![CDATA[Selects the content of a window as the current response. Useful when a test sequence causes many windows to open. Only one from 'name', 'title', or 'index' can be specified.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>title</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The title of the html document contained in the window to select.]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the window to select.]]></description>
                            </parameter>
                            <parameter>
                                <name>index</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The index (starting with 0) of the top level window to select. ]]></description>
                            </parameter>
                </step>
                <nested>
                    <class>com.canoo.webtest.engine.Header</class>
                    <name>header</name>
                    <category>General</category>
                    <description><![CDATA[Specify http headers by name and value]]></description>
                    <pre>
    <b>
        Header elements belong to the config rather than to a specific invocation, because they
        reflect browser settings. They are unlikely to change during a conversation.
    </b>
</pre>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the HTTP header as defined by the HTTP spec., e.g. <example>User-Agent</example>, <example>Accept-Language</example> or <example>Cookie</example>.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The header value. Range and format are restricted by the HTTP spec., e.g. <example>Mozilla/4.0</example>, <example>de-ch</example> or <example>cookieName=cookieValue</example>]]></description>
                            </parameter>
                </nested>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfToTextFilter</class>
                    <name>pdfToTextFilter</name>
                    <category>PDF</category>
                    <description><![CDATA[Extracts all text content from within the current <key>pdf</key> document.]]></description>
                    <pre>

    <b>
        In general, PDF documents can place text in documents using a variety of mechanisms. They may contain
        text as a stream of characters in an expected order, the order may not be expected but explicit
        positioning will place it in the correct position or it may contain graphical representations
        of the characters. For these reasons, this filter may not always produce what you expect.
        You will have to experiment to see what will work for you.
    </b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>pageSep</name>
                                <required>no</required>
                                <default>[+++ NEW PAGE +++]\n</default>
                                <description><![CDATA[The page separator string to use, e.g. "\n" or "------".]]></description>
                            </parameter>
                            <parameter>
                                <name>lineSep</name>
                                <required>no</required>
                                <default>platform line separator</default>
                                <description><![CDATA[The line separator string to use, e.g. " " or "\n".]]></description>
                            </parameter>
                            <parameter>
                                <name>fragSep</name>
                                <required>no</required>
                                <default>a single space</default>
                                <description><![CDATA[The fragment separator string to use, e.g. "" or " " or "," or " | ". Only used if <em>mode</em> is "<em>groupByLines</em>".]]></description>
                            </parameter>
                            <parameter>
                                <name>mode</name>
                                <required>no</required>
                                <default>normal</default>
                                <description><![CDATA[Deprecated: doesn't do anything anymore.]]></description>
                            </parameter>
                    <post>
    <b>
        Here is an example of using <em>pdfToTextFilter</em>:
    </b>

    <code caption='pdfToTextFilter example'>
        <include src='pdfexamples/toTextFilterExample.xml'/>
    </code>

    <b>As a result of invoking the above steps a file would be created containing something like the following:</b>

    <code caption='pdfToTextFilter output'>
        <include src='pdfexamples/toTextFilterOutput.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.form.SelectForm</class>
                    <name>selectForm</name>
                    <category>Core</category>
                    <description><![CDATA[This step can be used to specify a form in the document as the <em>current form</em>. The <em>current form</em> is given precedence when locating the form to use in form-related steps.]]></description>
                    <pre>

    <b>Further test steps will first look in this form for the fields to process.
    This allows easy processing of multiple fields within a form especially if you
    have multiple forms and would otherwise have to specify the form expicitly
    all the time, or if you have fields across multiple forms with the same names.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>index</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The <em>index</em> of the form to select (starting at 0). Either <em>name</em> or <em>index</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The <em>name</em> of the form to select (i.e. the value of the NAME attribute in <form name='foo' ... >). Either <em>name</em> or <em>index</em> is required.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alternative way to set the 'name' attribute.]]></description>
                            </nestedParameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyTitleStep</class>
                    <name>pdfVerifyTitle</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the title of the <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>title</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text/<key>regex</key> required to match the title.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyTitle">
        <include src='pdfexamples/verifyTitleExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.request.CloseWindow</class>
                    <name>closeWindow</name>
                    <category>Extension</category>
                    <description><![CDATA[Closes the current top level window. The content of the last previously opened window will become the current response.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.TestInfoStep</class>
                    <name>testInfo</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to display 'static' information in report. This step does nothing. It just gets reported as it (with its attributes) in the report.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>info</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The information that has to be displayed in the report (ex: related bug number, ...)]]></description>
                            </parameter>
                            <parameter>
                                <name>type</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The information type. Helps to classify info. Many information of the same type within a single WebTest are allowed. The types <em>issueNumber</em> and <em>summary</em> have a special signification for WebTest's standard report generation.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An alternative to the attribute info for e.g. large texts.]]></description>
                            </nestedParameter>
                    <post>

    <b>
    Suppose that you make a test to ensure that an issue registered in
    your issue tracking system is now fixed. You can write this information in the <em>webtest</em> using
    <em>testInfo</em> for instance this way
    </b>

    <code caption='testInfo Example'>
        <include src='examples/testInfoExample1.xml'/>
    </code>

	<b>
	Using the standard HTML reports generated by WebTest this information is displayed on the top
	of the test details.
	As <em>issueNumber</em> is a special type for testInfo, an additional formatting occurs here: an hyper link is created
	to the issue number in the bug tracking system (according that you set the build property <em>wt.htmlReports.testInfo.issueNumber.baseUrl</em>
	to specify the base url of your bug tracking system).
	</b>
	<section title="Special types">
	<b><em>testInfo</em> can be used for any type of information but two types are handled specially by WebTest's standard report generation:</b>
	<attributes>
		<attribute>
			<name>issueNumber</name>
			<description>It tells WebTest to generate an hyper link from the <em>info</em> attribute allowing to have a clickable link
			to an issue related to the test directly from the test report.
			The value of the build property <em>wt.htmlReports.testInfo.issueNumber.baseUrl</em> is prepended to the <em>info</em> value.
			In the case of WebTest's issue tracker, this property is set to <em>http://webtest-community.canoo.com/jira/browse/</em>
			to create links like <em>http://webtest-community.canoo.com/jira/browse/WT-250</em>.
			</description>
			<required>no</required>
		</attribute>
		<attribute>
			<name>summary</name>
			<description>
			Information contained in <em>testInfo</em> steps with this type will be displayed as well in the overview report.  
			</description>
			<required>no</required>
		</attribute>
	</attributes>
	</section>
</post>

                </step>
                <step>
                    <class>com.canoo.webtest.extension.dialogs.ExpectDialog</class>
                    <name>expectDialog</name>
                    <category>Extension</category>
                    <description><![CDATA[Provides the ability to set expectations in relation to user responses to <key>javascript</key> Dialog boxes (Alert, Confirm and Prompt dialogs).]]></description>
                    <pre>
    <b>This step is used prior to clicking on a link or button
        which invokes some
        <key>javascript</key>
        that uses dialogs (Alert, Confirm or Prompt dialogs).
        If you don't use this step,
        <key>CWT</key>
        simply clicks 'OK' on every dialog silently.
        This is OK if you don't care about the Dialogs, but if you do care, you have no way of
        telling if anything was actually clicked or what messages were displayed in the dialogs.
    </b>

    <b>You may be wondering why you need to set up expectations prior to clicking on a link
        or button. This is mostly due to implementation issues with the way <key>CWT</key>
        works and the way it calls <key>htmlunit</key> . It turns out to be easier at the moment to
        create a list of dialog expectations. As interactions with your application cause
        <key>javascript</key> to invoke dialogs, we simply look at the next dialog expectation
        on the list, check that it meets expectations (or optionally save away the dialog
        message text) and then remove it from the list. For tricky <key>javascript</key>
        there may be multiple interactions from the user.
        We simply list all the expected dialog interactions in the order we expect them to
        occur by repeating this step as many times as required. (Alternatively, consider
        using the newer <stepref name="expectDialogs"/> step which allows more concise expression
        of dialog sequences.)
    </b>

    <b>Often you will use the
        <stepref name="verifyNoDialogs"/>
        step in conjunction
        with this step to ensure that your expectations for dialogs were met. The
        <stepref name="verifyNoDialogs"/>
        step is used after clicking on your link or button - it
        checks that the list of expected dialogs is now empty, i.e. by the
        time you have finished interacting with your application all the dialogs you
        were expecting to need clicking were actually clicked.
    </b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>saveProperty</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the dialog text for later checking with "verifyProperty".]]></description>
                            </parameter>
                            <parameter>
                                <name>savePropertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the dialog text for later checking. Either "ant" or "dynamic".]]></description>
                            </parameter>
                            <parameter>
                                <name>dialogType</name>
                                <required>no</required>
                                <default>alert</default>
                                <description><![CDATA[One of "alert", "confirm" or "prompt".]]></description>
                            </parameter>
                            <parameter>
                                <name>response</name>
                                <required>no</required>
                                <default>true</default>
                                <description><![CDATA[simulate user response: ignored for alerts, converted to boolean for confirms - "OK" (true) or "Cancel" (false), contains typed text for prompts.]]></description>
                            </parameter>
                    <post>

    <b>Normally only one <em>&lt;expectDialog&gt;</em> step will be required but if you have
    complex <key>javascript</key>, it may require the user to respond to multiple dialogs associated
    with one form or link click. If this is the case (as in the complex example below) you should
    use multiple <em>&lt;expectDialog&gt;</em> steps in the same order that the user would respond
    to them in or consider using the enhanced <stepref name="expectDialogs"/> step. If you want to
    check that no dialogs were in fact used, you <em>must</em> use the <stepref name="expectDialogs"/> step.
    Only one <stepref name="verifyNoDialogs"/> is ever required after the click event
    to check that everything worked as planned.</b>

    <b>If you were expecting the <key>javascript</key> to invoke 2 dialog but only one was in fact
    invoked, the <stepref name="verifyNoDialogs"/> step will fail with an appropriate error message.
    Similarly, if you expected only one dialog interaction but more occurred, the intervening click
    request step will fail.
    </b>

    <b><em>Simple Example</em></b>

    <b>Consider the following <key>HTML</key> form:</b>

    <b><img src="images/dialog_simpleapp.gif"/></b>

    <b>If the user leaves fields blank, we want to pop up an alert as follows:</b>

    <b><img src="images/dialog_simplealert.gif"/></b>

    <b>The <key>HTML</key> might look something like:</b>

    <code caption='Simple dialog example HTML'>
     <include src='examples/dialogSimpleExampleHtml.xml' />
    </code>

    <b>The test might look something like:</b>

    <code caption='Simple dialog example Test'>
     <include src='examples/expectDialogSimpleExampleTest.xml' />
    </code>

<b><em>Complex Example</em></b>

    <b>Consider an application which performs some disk administration (the samples below
    don't actual do anything but show the kind of <key>javascript</key> messages that such
    an application would need to use).</b>

    <b><img src="images/dialog_app.gif"/></b>

    <b>When the user clicks the clean button they receive a <key>javascript</key> confirm dialog:</b>

    <b><img src="images/dialog_confirm.gif"/></b>

    <b>If the user selects "Cancel" they receive the following alert:</b>

    <b><img src="images/dialog_alert1.gif"/></b>

    <b>If the user selects "OK" they receive the following prompt dialog as a precaution:</b>

    <b><img src="images/dialog_prompt.gif"/></b>

    <b>If the user then clicks "Cancel" or enters incorrect text, e.g. "No" in the prompt, they receive the following alert dialog:</b>

    <b><img src="images/dialog_alert2.gif"/></b>

    <b>If the user enters the correct "YES" text and clicks "OK", they receive the following alert dialog (<em>NOTE</em>: nothing happens despite the message - this is just a hypothetical demo):</b>

    <b><img src="images/dialog_alert3.gif"/></b>

    <b>Here is the relevant part of the build.xml:</b>

    <code caption='Complex example test'>
     <include src='examples/expectDialogComplexExampleTest.xml' />
    </code>

    <b>This assumes you have some <key>HTML</key> containing a form and some <key>javascript</key> something like the following:</b>

    <code caption='Complex example HTML/JavaScript'>
     <include src='examples/dialogComplexExampleHtml.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.ant.task.PropertyTableTask</class>
                    <name>dataDriven</name>
                    <category>Extension</category>
                    <description><![CDATA[This is an Ant task that calls its nested element as often as specified by the tableContainer. In each run a new set of properties from the the tableContainer is made available to the nested steps]]></description>
                    <pre>
    <b>
        This is the integration into WebTest of the 
<ext href="http://webtest-community.canoo.com/wiki/space/PropertyTable">propertyTable</ext> task that is available
since a long time in WebTest Wiki. You may find usefull to look at this documation because it is
currently more complete than this current page.
    </b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>replaceProperties</name>
                                <required>no</required>
                                <default>no</default>
                                <description><![CDATA[Specifies whether properties contained in the table's values should be expanded or not]]></description>
                            </parameter>
                            <parameter>
                                <name>filterclass</name>
                                <required>no</required>
                                <default>FirstEquals</default>
                                <description><![CDATA[The filter to apply on the foreign table after the lookup. One of "All", "Empty", "FirstEquals", "AllEquals" or "Group".]]></description>
                            </parameter>
                            <parameter>
                                <name>table</name>
                                <required>no</required>
                                <default>the first table</default>
                                <description><![CDATA[The name of the source table in the current container. For instance the name of the sheet when the table container is an Excel document.]]></description>
                            </parameter>
                            <parameter>
                                <name>tableContainer</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The container for the table containing the data. Typically this is the path to an Excel file but this can also be a directory structure.]]></description>
                            </parameter>
                            <parameter>
                                <name>failASAP</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Indicates if the task should fail at the first failure of the nested content (when set to true) or continue the execution for all records and then throw a BuildException when one or more error occurred (when set to false).]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addTask</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[Any Ant task.]]></description>
                            </nestedParameter>
                    <post>
	<b>
	Imagine an Excel file like this one:<n/>
	<n/>
			<img src="images/dataDriven/simpleExcelFile.png"/>
	<n/>
	<n/>
	You can use <em>dataDriven</em> to execute a set of Ant tasks for each property set:
	</b>
    <code caption="dataDrivenEcho.xml">
        <include src='examples/dataDrivenEcho.xml'/>
    </code>
    <b>
    This will give you following output:
<code>
	[echo] Hello Denis N. Antonioli<n/>
	[echo] Hello Dierk König<n/>
	[echo] Hello Marc Guillemot<n/>
	[echo] Hello Paul King<n/>
	[echo] Hello Tomi Schütz<n/>
</code>
    </b>
    <b>
    Naturally you can combine it with WebTest, lets say to register these persons to some event:
    </b>
    <code caption="dataDrivenWebtetst.xml">
        <include src='examples/dataDrivenWebtest.xml'/>
    </code>
</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.dialogs.AlertDialogStep</class>
                    <name>alert</name>
                    <category>Extension</category>
                    <description><![CDATA[Provides the ability to set expectations in relation to user responses to <key>javascript</key> Alert Dialog boxes. Must be nested within the <stepref name='expectDialogs'/> step.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>saveProperty</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the dialog text for later checking with "verifyProperty". Must not be set if <em>text</em> is also set.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePropertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the dialog text for later checking. Either "ant" or "dynamic". Ignored if <em>saveProperty</em> is not set.]]></description>
                            </parameter>
                            <parameter>
                                <name>response</name>
                                <required>no</required>
                                <default>true</default>
                                <description><![CDATA[simulate user response: ignored for alerts; converted to boolean for confirms - "OK" (true) or "Cancel" (false); contains typed text for prompts.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.StoreInputFieldAttribute</class>
                    <name>storeInputFieldAttribute</name>
                    <category>Extension</category>
                    <description><![CDATA[Retrieves the attribute value of a selected input field. Can be used to check whether an input field is enabled.]]></description>
                    <pre>
    <b>
        This step provides a mechanism to peek inside the state of
        input elements inside your
        <key>HTML</key>. It should be used with care as
        the user (via their browser) typically wouldn't have direct access to these
        states (but probably are given an alternative visual
        representation, e.g. if the state is disabled, the element
        will probably be greyed out). Because WebTest doesn't
        represent the page graphically, peeking at the states
        can be the next best thing to know what is going on.
    </b>
    <b>
        Available states include: "checked" and "disabled".
    </b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the input field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The value of the input field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>attributeName</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the attribute of interest, e.g. "disabled" or "checked".]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index (starting at 0) of the attribute of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Deprecated. Same as property.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default>the last form selected using 'selectForm', otherwise searches all forms</default>
                                <description><![CDATA[The name of the form containing the field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the retrieved value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>Consider the following <key>HTML</key> form:</b>

    <code caption='inputFieldAttributePage.html'>
    <include src='examples/storeInputFieldAttributePageHtml.xml' />
    </code>

    <b>This page contains some <key>javascript</key> validation. We can use the <em>storeInputFieldAttribute</em> step
    to check that the validation is working. When the form is first loaded, the "Click Me" button should
    be disabled as the "value1" field is empty. We can then place some content into the field. We should
    then note that the "Click Me" button is now enabled (the onchange <key>javascript</key> event will do this).
    Here is the script code:</b>

    <code caption='storeInputFieldAttribute Example'>
        <include src='examples/storeInputFieldAttributeExample.xml'/>
    </code>

    <b><em>See also</em>: the <stepref name="forceInputFieldAttribute"/> step in order to set an input field attribute,
        and the <stepref name="storeElementAttribute"/> step to be able to store an attribute using an <key>XPATH</key>
        expression or an <key>HTML</key> id.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.spider.ReportSiteStep</class>
                    <name>reportSite</name>
                    <category>Extension</category>
                    <description><![CDATA[This step is used to test a complete site.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>file</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[the name of the file that should contain the report. If not specified, report will be generated to standard output]]></description>
                            </parameter>
                            <parameter>
                                <name>depth</name>
                                <required>no</required>
                                <default>0</default>
                                <description><![CDATA[the recursion depth]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfToBookmarksFilter</class>
                    <name>pdfToBookmarksFilter</name>
                    <category>PDF</category>
                    <description><![CDATA[Extracts all bookmarks from within the current <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                    <post>
    <b>
        Here is an example of using <em>pdfToBookmarksFilter</em>:
    </b>

    <code caption='pdfToBookmarksFilter example'>
        <include src='pdfexamples/toBookmarksFilterExample.xml'/>
    </code>

    <b>As a result of invoking the above steps a file would be created containing something like the following:</b>

    <code caption='pdfToBookmarksFilter output'>
        <include src='pdfexamples/toBookmarksFilterOutput.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyEncryptionStep</class>
                    <name>pdfVerifyEncryption</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies whether a <key>pdf</key> document is encrypted and whether the user password and owner password are correct. This step should only be executed before (and not after) decrypting an encrypted <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>encrypted</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[]]></description>
                            </parameter>
                            <parameter>
                                <name>userPassword</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The text required to decrypt the PDF document using the user password.]]></description>
                            </parameter>
                            <parameter>
                                <name>ownerPassword</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The text required to decrypt the PDF document using the owner password.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyEncryption Example">
        <include src='pdfexamples/verifyEncryptionExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.store.StoreCookie</class>
                    <name>storeCookie</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to store an <key>HTTP</key> Cookie value for later checking.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the cookie of interest. If the property name is not specified, the cookie name is used as key to store the value found.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the retrieved value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>
    Suppose that we have created a JSP called <em>visitCount.jsp</em>
    which increments a cookie called <em>VISITCOUNT</em> each time
    we visit the page. The following test code can test the
    cookie usage of this JSP:
    </b>

    <code caption='storeCookie Example1'>
        <include src='examples/storeCookieExample1.xml'/>
    </code>

    <b>Cookie usage is as follows:</b>
    <dl>
    <li><dd>The <em>JSESSIONID</em> cookie is used by Java web servers to
    manage user sessions and should be unique between visitors.</dd></li>
    <li><dd>The <em>VISITCOUNT</em> cookie is used to track unique hits to
    the site and should increment after each invoke.</dd></li>
    </dl>

    <b>Browsers store cookie values away persistently (except for transient
    cookies - but that is another story). <key>CWT</key> doesn't support
    persistence of cookies (although you could simulate that using <key>ANT</key>
    functionality). What is possible however without further <key>ANT</key>
    tasks is the ability to set an initial cookie value. This lets you partially
    simulate a persistent cookie. This is done by using the <em>header</em>
    nested element within the <em>config</em> section of your test.
    Here is an example using <em>verifyCookie</em>
    and an initial cookie value for the above example.
    </b>

    <code caption='storeCookie Example2'>
        <include src='examples/storeCookieExample2.xml'/>
    </code>

    <b><em>See also</em>: the <stepref name="verifyCookie"/> step.</b>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.extension.StoreDigest</class>
                    <name>storeDigest</name>
                    <category>Extension</category>
                    <description><![CDATA[Stores a digest value for the response (or part of the response) into a property. This is useful when you don't care what the value within a response is but you want to ensure that the generated content hasn't changed. If any single character in the response changes, so will the digest. Supports content filters such as <stepref name='lineSeparatorFilter'/> and <stepref name='replaceFilter'/> to allow you to filter out changes that you don't care about and the <stepref name='table' category='Core'/> locator step if you are interested in content within a table.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>type</name>
                                <required>no</required>
                                <default>SHA-1</default>
                                <description><![CDATA[The type of message digest algorithm to use, e.g. 'MD5' or 'SHA-1'.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The target property type. Either "ant" or "dynamic".]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The target property name.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The id of an <key>HTML</key> element. If present, processing will be limited to this element. Will be ignored if a nested <stepref name='table'/> step is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An XPath expression identifying an <key>HTML</key> element. If present, processing will be limited to this element. Will be ignored if <em>htmlId</em> is set or if a nested <stepref name='table'/> step is used.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addTable</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[To locate a specific cell in a specific table on the page.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <b>The following example illustrates how to use the <em>storeDigest</em> step (illustrating the use of the nested
        line separator content filter which ensures that differences in line separator which may occur in different
        environments don't influence the digest value):</b>

    <code caption="storeDigest example">
        <include src='examples/storeDigestExample.xml'/>
    </code>

    <b>Note that both <em>SHA-1</em> (the default) and <em>MD5</em> digest are shown. These are the most commonly
    used digests with Java (because they are built in) but about 20 different kinds of digests are available
    in various cryptography packages for Java and may be available to you if someone has downloaded an appropriate
    class library and configured your systems to use it. You may also have heard of the related terms checksum
    and/or hash (sometimes loosely means a digest, sometimes meaning a weaker algorithm which can be
    used to detect some forms of content change) or digital signature (a digest value can be part of this).</b>

    <b>At the moment the best way to calculate the digest value (so that you can write the test) is to use a
        dummy value (e.g. 'xxxxx') and then run the test. Then when it fails it will tell you what it was expecting.
        Simply copy that value into your test. Eventually we may store digest values in a file and populate the
        file for you the first time the test is run or we may have a tool (e.g. Mozilla plug-in or one of the
        other recorder tools) to pre-calculate digest values for you.</b>

    <b><em>See also</em>: the <stepref name="verifyContent"/>,
        <stepref name="storeLength"/>,
        <stepref name="lineSeparatorFilter"/>,
        <stepref name="replaceFilter"/>,
        <stepref name="tagStripper"/> and
        <stepref name="contentStripper"/> steps.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.PreviousResponse</class>
                    <name>previousResponse</name>
                    <category>Core</category>
                    <description><![CDATA[This step provides the ability to revert to the previously loaded response for further testing of the previous page if testing of the current response is complete.]]></description>
                    <pre>

    <b>This is especially handy if the current response is a warning/dialog window or a non <em>html/text</em> response.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailMessageStructureFilter</class>
                    <name>emailMessageStructureFilter</name>
                    <category>Email</category>
                    <description><![CDATA[Returns the structure (expressed in XML) associated with a particular message as the current response.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>headers</name>
                                <required>no</required>
                                <default>no headers</default>
                                <description><![CDATA[A comma or space seperated list of headers to include in the structure description.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                            <parameter>
                                <name>messageId</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The message id.]]></description>
                            </parameter>
                    <post>

    <b>
        Here is an example of using the <em>emailMessageStructureFilter</em> step.
    </b>

    <code caption="emailMessageStructureFilter">
        <include src='emailexamples/emailMessageStructureFilterExample.xml'/>
    </code>

    <b>
        The resulting files will be as follows:
    </b>

    <code caption="plainStructure.txt">
        <include src='emailexamples/plainStructure.xml'/>
    </code>

    <code caption="uuStructure.txt">
        <include src='emailexamples/uuStructure.xml'/>
    </code>

    <code caption="mimeStructure.txt">
        <include src='emailexamples/mimeStructure.xml'/>
    </code>

    <b>Note in the above example the XML structure descriptions were saved
    away for later comparison. An alternative would be to perform
    <stepref name="verifyXPath" category="core"/> tests on the resulting current content.</b>
</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.store.StorePropertyStep</class>
                    <name>storeProperty</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to store a given value into a property. It supports both dynamic properties and traditional ant properties.]]></description>
                    <pre>
    <b>
        Using the <em>eval</em> attribute indicates that the property should
        be treated as numeric and any simple expressions within the value should
        be evaluated. Brackets '(' and ')' as well as mathematical operators
        '+', '-', '*', '/' and '%' are supported. The result is treated as a
        double but converted back to a string before being stored into the
        property.
    </b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The property name. Must be set if <em>property</em> is not set (unless <em>file</em> is used).]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The property value. Must be set unless <em>file</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>eval</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[A flag which determines if the value is to be treated as a mathematical expression to be evaluated.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An alternative to the attribute value.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>file</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the file from which properties should be loaded. It is similar to Ant's <property file='...'/> with the difference that this task allows to define dynamic properties that can be overwritten.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the retrieved value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>The following examples illustrate various expression calculations.</b>

    <code caption="storePropertyEvalExamples">
        <include src='examples/storePropertyEvalExamples.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.control.TimedGroupStep</class>
                    <name>timedGroup</name>
                    <category>Extension</category>
                    <description><![CDATA[This step allows nesting of other steps. Any kind of step can be nested. Execution of the group is deemed successful if all the nested steps are executed successfully and the total execution time for the group is less than the time given by the <em>maxSeconds</em> or <em>maxMillis</em> parameters.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>maxSeconds</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The maximum number of seconds allowed for this group to execute. Either <em>maxSeconds</em> or <em>maxMillis</em> must be set but not both.]]></description>
                            </parameter>
                            <parameter>
                                <name>maxMillis</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The maximum number of milliseconds allowed for this group to execute. Either <em>maxSeconds</em> or <em>maxMillis</em> must be set but not both.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <code caption='timedGroup Example'>
        <include src='examples/timedGroupExample.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.VerifyDocumentURL</class>
                    <name>verifyDocumentURL</name>
                    <category>Extension</category>
                    <description><![CDATA[This step verifies that the document URL matches the supplied text (potentially using a <key>regex</key>).]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alternative way to set the 'text' attribute.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.mouse.MouseOut</class>
                    <name>mouseOut</name>
                    <category>Extension</category>
                    <description><![CDATA[Triggers a <em>mouseOut</em> event on the <key>HTML</key> element identified by its <em>id</em> or <em>xpath</em>. If this triggers the load of a new page, then this page becomes the current one.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the HTML element to trigger the event on. One of <em>htmlId</em> or <em>xPath</em> must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The XPath identifying the HTL element to trigger the event on. One of <em>htmlId</em> or <em>xPath</em> must be set.]]></description>
                            </parameter>
                </step>
                <nested>
                    <class>com.canoo.webtest.steps.locator.TableLocator</class>
                    <name>table</name>
                    <category>Core</category>
                    <description><![CDATA[This optional nested element can be used to locate a specific cell in a specific table on the page.]]></description>
                    <pre>
	<b>This nested element is currently available for the following steps:</b>
	<dl>
		<li>
			<dt>
				<stepref name="verifyText"/>
			</dt>
			<dd>to verify the text in the cell, optionally using a
				<key>regex</key>
				.
			</dd>
		</li>
		<li>
			<dt>
				<stepref name="storeDigest" category='Extension'/>
			</dt>
			<dd>To store a digest corresponding to the selected table cell.</dd>
		</li>
		<li>
			<dt>
				<stepref name="storeLength" category='Extension'/>
			</dt>
			<dd>To store the length of the content of the selected table cell.</dd>
		</li>
		<li>
			<dt>
				<stepref name="verifyContent" category='Extension'/>
			</dt>
			<dd>To compare a selected table cell with a previously saved content of that table cell.</dd>
		</li>
	</dl>
</pre>

                            <parameter>
                                <name>htmlId</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The table's id attribute, if present. It is used instead of the name attribute here, because HTML 4.0 does not support that attribute on tables.]]></description>
                            </parameter>
                            <parameter>
                                <name>id</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Deprecated. Same as htmlid.]]></description>
                            </parameter>
                            <parameter>
                                <name>row</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The cell's row index in the table, starting at 0.]]></description>
                            </parameter>
                            <parameter>
                                <name>column</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The cell's column index in the table, starting at 0.]]></description>
                            </parameter>
                            <parameter>
                                <name>description</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Description for this locator.]]></description>
                            </parameter>
                    <post>

    <code caption="Table Locator Example">
        <include src='examples/tableLocatorExample.xml'/>
    </code>

    <b>
        <em>See also</em>: the <stepref name="verifyText"/> step.
    </b>

</post>

                </nested>
                <step>
                    <class>com.canoo.webtest.ant.TestStepSequence</class>
                    <name>steps</name>
                    <category>General</category>
                    <description><![CDATA[This is a nested task of <stepref name='webtest' category='General'/> and is used to define the sequence of test steps to be executed.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

	<code caption="steps">
		<include src='examples/stepsExample.xml'/>
	</code>
</post>

                </step>
                <step>
                    <class>com.canoo.webtest.extension.MatchLinesFilter</class>
                    <name>matchLinesFilter</name>
                    <category>Filter</category>
                    <description><![CDATA[Removes or keeps lines which match a <key>regex</key>. For use with steps which take a <em>ContentFilter</em>.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The regex to match against lines.]]></description>
                            </parameter>
                            <parameter>
                                <name>remove</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Indicates that lines which match will be removed (true) or kept (false).]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.form.SetFileField</class>
                    <name>setFileField</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to set an <input type="file" ...> form field.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>fileName</name>
                                <required>true</required>
                                <default></default>
                                <description><![CDATA[The name of the file to upload.]]></description>
                            </parameter>
                            <parameter>
                                <name>checkFileExists</name>
                                <required>false</required>
                                <default>true</default>
                                <description><![CDATA[Indicates if the step should verify that the file to upload exists. It is useful to deactivate this check, when you want to test how the application react when a file input field is filled with a wrong value.]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>forLabel</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text of the label field associated with the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default>the last form selected using 'selectForm', otherwise searches all forms</default>
                                <description><![CDATA[The name of the form containing the field of interest. Ignored if <em>htmlId</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default>the first field found that matches criteria</default>
                                <description><![CDATA[The index of the field of interest (starting at 0) if more than one field matches criteria. Ignored if <em>htmlId</em> or <em>xpath</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyLinkStep</class>
                    <name>pdfVerifyLink</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the existence of a link within a <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text of the link to find. One of <em>text</em> or <em>href</em> must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>href</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The href of the link to find. One of <em>text</em> or <em>href</em> must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>page</name>
                                <required>no</required>
                                <default>all pages</default>
                                <description><![CDATA[The page on which to search.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the search value represents a <key>regex</key>.]]></description>
                            </parameter>
                    <post>
    <b>
        Here is an example of using <em>pdfVerifyLink</em>:
    </b>

    <code caption='pdfVerifyLink example'>
        <include src='pdfexamples/verifyLinkExample.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyProperty</class>
                    <name>verifyProperty</name>
                    <category>Core</category>
                    <description><![CDATA[This step verifies whether the value of a webtest dynamic property or an ant property matches an expected text value. The text value can represent a <key>regex</key>. If the text value is omitted, the step simply checks for the presence of the property.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>text</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected value of the property. If omitted just checks for existence of the property.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alias for <em>text</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of a property to test. Must be set if <em>property</em> is not set.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Alias for <em>name</em>. Must be set if <em>name</em> is not set.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                    <post>

    <code caption="verifyProperty example">
        <include src='examples/verifyPropertyExample.xml' />
    </code>

    <b><em>See also</em>: the <stepref name="storeProperty"/> step.</b>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.extension.VerifyImages</class>
                    <name>verifyImages</name>
                    <category>Extension</category>
                    <description><![CDATA[Verifies that all images referenced in the current response are available. May not correctly detect images referenced in JavaScript or CSS files or images set by JavaScript.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyTextArea</class>
                    <name>verifyTextarea</name>
                    <category>Core</category>
                    <description><![CDATA[This step is a "shortcut" for <em><verifyElementText type="TEXTAREA" ...></em>.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the element, i.e. the value of the 'name' attribute. Ignored if using 'htmlId'.]]></description>
                            </parameter>
                            <parameter>
                                <name>type</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The HTML element (tag) name. One of 'htmlId' or 'type' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The HTML htmlId of the element. One of 'htmlId' or 'type' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                    <post>

    <code caption="verifyTextarea Example">
        <include src='examples/verifytextareaExample.xml' />
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.control.RepeatStep</class>
                    <name>repeat</name>
                    <category>Core</category>
                    <description><![CDATA[This step encapsulates one or more test steps that shall be repeated a certain number of times. Any kind of step can be nested.]]></description>
                    <pre>

    <b>This is useful when you want some test to be repeated a given number of times.
    To facilitate reporting, nested steps are wrapped in an "Iteration wrapper" step for each execution.</b>

    <b>The actual repetition counter is made available to the steps included in the
    <em>&lt;repeat&gt;</em> step by a dynamic property. Its default name
    is &quot;count&quot; unless modified by the <em>countername</em> attribute.
    This property can be referenced by steps nested in the <em>&lt;repeat&gt;</em> step 
    using this notation &quot;#{count}&quot; (resp. the specified countername).</b>

    <b>When used with <em>xpath</em>, <em>&lt;repeat&gt;</em> performs one iteration per node given by the evaluation of the XPath expression
    and places the current node in the global variable context under the name specified by the <em>countername</em> attribute. 
    This makes the current node availabe for xpath expressions in <em>&lt;repeat&gt;</em>'s nested steps with the syntax &quot;$count&quot; 
    (resp. the specified countername).
    </b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>count</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The number of times that the included steps shall be executed. Specify either count or endCount. Counter values start at <em>startCount</em> and go up to <em>startCount + count - 1</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>startCount</name>
                                <required>no</required>
                                <default>0</default>
                                <description><![CDATA[The initial value of the count. Doesn't affect the number of iterations, just the value appearing in the counter.]]></description>
                            </parameter>
                            <parameter>
                                <name>endCount</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The final value of the count. Specify either count or endCount. Counter values start at <em>startCount</em> and go up to <em>endCount</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>step</name>
                                <required>no</required>
                                <default>1</default>
                                <description><![CDATA[The step size of the count. Doesn't affect the number of iterations, just the value appearing in the counter.]]></description>
                            </parameter>
                            <parameter>
                                <name>counterName</name>
                                <required>no</required>
                                <default>count</default>
                                <description><![CDATA[The name that shall be used to reference the current repetition counter.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Specifies the <key>XPATH</key> expression which evaluation gives the results on which to iterate]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <b>The following example illustrates the most simple usage of a <em>&lt;repeat&gt;</em> step and shows
    how to reference the repetition counter via its default name.</b>

    <code caption="repeat 1">
        <include src='examples/repeatExample1.xml' />
    </code>

    <b>This example shows two nested <em>&lt;repeat&gt;</em> steps where each uses a specific countername
    in order to access within the innermost <em>&lt;repeat&gt;</em> step both values.</b>

    <code caption="repeat 2">
        <include src='examples/repeatExample2.xml' />
    </code>

    <b>This example shows how the <em>xpath</em> attribute allows a compact syntax</b>

    <code caption="repeat with xpath">
        <include src='examples/repeatExample3.xml' />
    </code>
</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.VerifyLinkedContent</class>
                    <name>verifyLinkedContent</name>
                    <category>Extension</category>
                    <description><![CDATA[Verify all selected links on a page for existence and, optionally, mime-type.]]></description>
                    <pre>
	<b>
      This step provides a mechanism to verify the availability of the resources linked from a page.
		The step tries to fetch all the resources referenced on the page that the <kbd>xpath</kbd> attribute selects.
		With this step, the availability of any kind of resources can be ensured, such as images, css stylesheets,
		linked javascripts, ...
	</b>
	<b>Further, the step can verify that the webserver provides the resources with the correct mime-type.</b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The links to checks]]></description>
                            </parameter>
                            <parameter>
                                <name>accept</name>
                                <required>no</required>
                                <default>Accepts anything.</default>
                                <description><![CDATA[Type and subtype that the answer must have, in the classical mime-type notation.]]></description>
                            </parameter>
                    <post>
	<b>
 The attribute
		<kbd>accept</kbd> follows a subset of the description of the http-accept header in RFC 2616,
 simplifying it where possible:
		<n/>
 The attribute value takes one or more
		<em>media-range</em>, separated by a semi-colon.
		<n/>
 A media-range is a pair of mime
		<em>type</em> and
		<em>subtype</em> separated by a slash.
 The special subtype
		<kbd>*</kbd> accepts all of subtypes of the named type,
 and the special media-range
		<kbd>*/*</kbd> accepts any mime-type.
	</b>
	<b>The most simple usage of
		<em>&lt;verifyLinkedContent&gt;</em> is to make sure that the server returns all resources.
		Note that the simple xpath selects the <em>resources</em> to verify.
	</b>

	<code caption="Verify the existence of all stylesheet">
		<include src='examples/verifyLinkedContentExample1.xml'/>
	</code>

	<b>In a middle level,
		<em>&lt;verifyLinkedContent&gt;</em> can also enforce the mime-type returned by the server.
	</b>

	<code caption="Verify the existence and the mime-type of all stylesheet">
		<include src='examples/verifyLinkedContentExample2.xml'/>
	</code>

	<b>In an example of advanced usage, the xpath selects all images in the page and makes sure
 that the images are either gif or png.
	</b>

	<code caption="Verify the existence and the mime-type of all images">
		<include src='examples/verifyLinkedContentExample3.xml'/>
	</code>
</post>
                </step>
                <step>
                    <class>com.canoo.webtest.engine.Configuration</class>
                    <name>config</name>
                    <category>General</category>
                    <description><![CDATA[This is a nested task of <stepref name='webtest' category='General'/> and is used to configure the target host system to use for a particular <stepref name='webtest' category='General'/> and several other features such as reporting of test results and printing of debug information.]]></description>
                    <pre>

    <b>The
        <em>&lt;config&gt;</em> element is a nested element of
        <stepref name="webtest"/> and is used
		to configure the target host system to use for a particular webtest and several other feature like
		reporting of test results and printing of debug information.
    </b>

    <b>Since the
        <em>&lt;config&gt;</em> element can contain so many different attributes,
		the description of the attributes is split over many tables.
    </b>

    <b>The first table describes the default URL parameter.</b>

        <attributes>
            <attribute>
                <name>host</name>
                <description>Defines the hostname to use for executing requests, e.g.
                    &quot;localhost&quot; or &quot;www.myhost.com&quot;.</description>
                <required>No, default is &quot;localhost&quot;</required>
            </attribute>
            <attribute>
                <name>port</name>
                <description>Defines the port number to use for executing requests, e.g.
                    &quot;8080&quot;.</description>
                <required>No, defaults is &quot;80&quot;</required>
            </attribute>
            <attribute>
                <name>protocol</name>
                <description>Defines the protocol to use for executing requests.
                    &quot;http&quot;, &quot;https&quot;, and &quot;file&quot; are currently the only supported protocols.</description>
                <required>No, defaults is &quot;http&quot;</required>
            </attribute>
            <attribute>
                <name>basepath</name>
                <description>Defines the constant base path used to construct request URLs, e.g. &quot;shop&quot;
		can be considered a
                    <em>basepath</em> in &quot;http:/www.myhost.com/shop/productlist&quot;
		and &quot;http:/www.myhost.com/shop/checkout&quot;.
                </description>
                <required>No, defaults is empty</required>
            </attribute>
        </attributes>
    <b>
	    The next table describes the attributes responsible for WebTest's reporting and logging.
        These attributes define
        <em>if</em> and
        <em>where</em> WebTest store logging information. Actual reporting is usually
			performed by xsl transformation after the test complete.
    </b>
        <attributes>
            <attribute>
                <name>summary</name>
                <description>Deprecated: not used anymore.</description>
            </attribute>
            <attribute>
                <name>saveresponse</name>
                <description>Defines whether the last response received from the target
                host is saved into the file &quot;&lt;saveprefix&gt;&lt;uniqueId&gt;.html&quot;.
                <em>saveprefix</em> is the value set in the &lt;saveprefix&gt; config element.<n/>
                <em>uniqueId</em> is a timestamp at the time the file is saved.<n/>
                This is especially helpful for debugging your tests.
                </description>
                <required>No, default is &quot;false&quot;</required>
            </attribute>
            <attribute>
                <name>saveprefix</name>
                <description>Sets the name to use if the current response received from the target
                host is to be saved into a file. A unique id will also be appended after the prefix.
                </description>
                <required>No, default is &quot;response&quot;</required>
            </attribute>
            <attribute>
                <name>resultpath</name>
                <description>Defines the resultpath of saved responses (for example last response).</description>
                <required>No, default is the subdirectory &quot;webtest-results&quot; of the project base directory.</required>
            </attribute>
            <attribute>
                <name>resultfile</name>
                <description>Deprecated: not used anymore.
                </description>
            </attribute>
        </attributes>
    <b>The next table describes the webtest's behaviour when encountering failures and errors.</b>
        <attributes>
            <attribute>
                <name>haltonerror</name>
                <description>Determines if the execution of the current &lt;webtest&gt; stops if a
		program error (unhandled exception) is encountered in one of the test steps. An
                    <key>ANT</key> BuildFailed exception will be raised
		if it is set to &quot;Yes&quot;. This will terminate the execution of the
                    <key>ANT</key> script.
                    <n/>
		Setting the option to &quot;false&quot; will stop the execution of the current &lt;webtest&gt; but continues with the
		next
                    <key>ANT</key> task, e.g. another &lt;webtest&gt;.
                </description>
                <required>No, default is &quot;true&quot;</required>
            </attribute>
            <attribute>
                <name>errorproperty</name>
                <description>Specifies the name of an ant property which is set to true if the execution
					of the current &lt;webtest&gt; stops if a program error (unhandled exception) is encountered
					in one of the test steps. When using this property, set &quot;haltonerror&quot; to &quot;false&quot;.
					Then check the ant property after performing all of your tests and if set fail. This allows your tests to
					continue running even if some experience execution errors (allowing you to catch multiple errors with one test run)
					but still ultimately fails the build if anything went wrong.
                </description>
                <required>No</required>
            </attribute>
            <attribute>
                <name>haltonfailure</name>
                <description>Determines if the execution of the current test halts if a failure of one of the
		test steps is detected, e.g. a &lt;verify...&gt; test did not pass. Even when set to &quot;false&quot;
		all of the trailing &lt;step&gt;s of the current &lt;webtest&gt; will be skipped but processing will
		continue with the next &lt;webtest&gt;.</description>
                <required>No, default is &quot;true&quot;</required>
            </attribute>
            <attribute>
                <name>failureproperty</name>
                <description>Specifies the name of an ant property which is set to true if the test fails.
					When using this property, set &quot;haltonfailure&quot; to &quot;false&quot;. Then check the
					ant property after performing all of your tests and if set fail. This allows your tests to
					continue running even if some fail (allowing you to catch multiple errors with one test run)
					but still ultimately fails the build if anything went wrong.
                </description>
                <required>No</required>
            </attribute>
        </attributes>
    <b>The next table groups miscellaneous configuration options.
    </b>
        <attributes>
            <attribute>
                <name>browser</name>
                <description>Specifies the browser that should be simulated.
                Allowed values are 
                <example>Firefox3</example> (or <example>FF3</example>) (deprecated),
                <example>Firefox3.6</example> (or <example>FF3.6</example>),
                <example>Firefox10</example> (or <example>FF10</example>),
                <example>InternetExplorer6</example> (or <example>IE6</example>),
                <example>InternetExplorer7</example> (or <example>IE7</example>),
                <example>InternetExplorer8</example> (or <example>IE8</example>).
                </description>
                <required>No, default is &quot;InternetExplorer6&quot;</required>
            </attribute>
            <attribute>
                <name>useInsecureSSL</name>
                <description>Specifies if WebTest should ignore insecure SSL certificates like self signed certificate that
                have not been added to the truststore or expired certificates.
                </description>
                <required>No, default is &quot;false&quot;</required>
            </attribute>
            <attribute>
                <name>sslKeyStore</name>
                <description>Specifies a file system path or URL to a keystore or certificate file containing one or more
                    client certificates. If present, WebTest is performing ssl authentication using client certificates.
                    The file / keystore type is defined by &quot;sslKeyStoreType&quot;.
                </description>
                <required>No, default is &quot;null&quot;</required>
            </attribute>
            <attribute>
                <name>sslKeyStoreType</name>
                <description>Specifies type of the keystore or ssl certificate file defined by &quot;sslKeyStore&quot;.
                    Can be &quot;pkcs12&quot; or &quot;jks&quot; (Java Key Store) ...
                </description>
                <required>No, default is &quot;jks&quot;</required>
            </attribute>
            <attribute>
                <name>sslKeyStorePassword</name>
                <description>Specifies the keystore password.
                </description>
                <required>No, default is &quot;null&quot;</required>
            </attribute>
            <attribute>
                <name>sslTrustStore</name>
                <description>Specifies the path or URL to a Java Key Store containing server certificates to be trusted.
                </description>
                <required>No, default is &quot;null&quot;</required>
            </attribute>
            <attribute>
                <name>sslTrustStorePassword</name>
                <description>Specifies the sslTrustStore password.
                </description>
                <required>No, default is &quot;null&quot;</required>
            </attribute>
            <attribute>
                <name>timeout</name>
                <description>Defines the timeout value in seconds for both connection and socket.<n/>
                The connection timeout is the maximum allowed time until a connection is etablished.
                The socket timeout is the timeout for waiting for data.<n/>
                A timeout value of zero is interpreted as an infinite timeout.
                </description>
                <required>No, default is &quot;300&quot;</required>
            </attribute>
            <attribute>
                <name>showhtmlparseroutput</name>
                <description>Defines that the JTidy output of parsing resulting
                    <key>HTML</key> pages shall be shown.
		If enabled, the generated errors/warnings are collected as test step parameters and written into the report file.
        The output is also written to stdout. The parser output can be used to
		detect invalid
                    <key>HTML</key> code in a particular page, unbalanced elements or invalid
		nesting of elements (e.g. &lt;form&gt; and &lt;table&gt;).
                    <n/>
		Since the parser can generate a lot of warnings and these warnings need to be
		manually analyzed, it is recommended to enable this option only on demand,
		e.g. to initially verify the correctness of an
                    <key>HTML</key> page or if a particular
		test case does not work (e.g. a button can not be found in a page).
                </description>
                <required>No, default is &quot;false&quot;</required>
            </attribute>
            <attribute>
                <name>defaultpropertytype</name>
                <description>Determines the default storage used for properties. If set to &quot;dynamic&quot;, webtest dynamic properties are used.
					If set to &quot;ant&quot;, properties are stored as ant variables. If set to &quot;antstrict&quot;, ant properties are
					used but normal ant immutability is respected, i.e. if a property is already set, then it won't be over-written.
                    <n/>
					When setting this attribute to &quot;ant&quot; or &quot;antstrict&quot;, the #{propName} syntax allows late binding
					to ant properties whereas the ${propName} syntax remains supported with normal binding.
                    <n/>
					If using ant properties to store webtest properties, the values of properties persist across &lt;webtest> tasks but
					you run the risk of name clashes with other tasks using ant properties.
                    <n/>
					If using repeat steps, avoid using &quot;antstrict&quot; for this setting if you need access to the repeat loop
					counter value. The repeat loop will execute as normal but the #{count} property will remain unchanged once set.
                </description>
                <required>No, default is &quot;dynamic&quot;,</required>
            </attribute>
            <attribute>
                <name>autorefresh</name>
                <description>Specifies whether the client should automatically follow page refresh requests (html:
                    <em>&lt;meta http-equiv="refresh" ...&gt;</em>).
                    <n/>
                    If set to "true" or "false", this indicates if refresh requests should be followed or not.
                    If set to an integer value only refresh request with a delay less or equal to the specified value will be executed. 
                </description>
                <required>No, default is &quot;false&quot;</required>
            </attribute>
        </attributes>

    <code caption="config">
        <include src='examples/configExample.xml' />
    </code>

    <b>The previous test code example will create URLs with the following prefix: "http://www.myhost.com:8080/shop/".</b>
</pre>

                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addHeader</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Specify http headers by name and value]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addOption</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Tweak the underlying web client options/settings]]></description>
                            </nestedParameter>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.dialogs.PromptDialogStep</class>
                    <name>prompt</name>
                    <category>Extension</category>
                    <description><![CDATA[Provides the ability to set expectations in relation to user responses to <key>javascript</key> Prompt Dialog boxes. Must be nested within the <stepref name='expectDialogs'/> step.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>saveProperty</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the dialog text for later checking with "verifyProperty". Must not be set if <em>text</em> is also set.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePropertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the dialog text for later checking. Either "ant" or "dynamic". Ignored if <em>saveProperty</em> is not set.]]></description>
                            </parameter>
                            <parameter>
                                <name>response</name>
                                <required>no</required>
                                <default>true</default>
                                <description><![CDATA[simulate user response: ignored for alerts; converted to boolean for confirms - "OK" (true) or "Cancel" (false); contains typed text for prompts.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.store.StoreHeader</class>
                    <name>storeHeader</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to store an <key>HTTP</key> Header value for later checking]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the Http Response Header of interest. If the property name is not specified, the header name is used as key to store the value found.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the retrieved value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <code caption='storeHeader Example'>
        <include src='examples/storeHeaderExample.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.ant.WebtestTask</class>
                    <name>webtest</name>
                    <category>General</category>
                    <description><![CDATA[This <key>ANT</key> task provides the ability to specify and execute functional tests for web-based applications. The steps of the test specification to execute are defined as a sequence of nested test steps. Each <em><webtest></em> task is executed in its own web session, i.e. two subsequent <em><webtest></em> tasks are executed in different sessions. This task was previously named "testSpec". For compatibility reasons, both names will work.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addConfig</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The webtest configuration.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addSteps</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[All the webtest steps.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[Defines a name for this test specification.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.TagStripperFilter</class>
                    <name>tagStripper</name>
                    <category>Filter</category>
                    <description><![CDATA[Removes all tags within well-formed XML/XHTML content.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                    <post>

    <b>This content filter can be useful in environments where the content stays the same but tags or tag
        attributes may change, e.g. a simple portal with presentation preferences depicted in CSS or other
        presentation-oriented tags. This tag removes the tags (and any attributes) hence removes the
    part of the response subject to change. The remainder can then be safely compared to an expected value.</b>

    <b>See the <stepref name="verifyContent"/> step for an example of using this content filter.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.request.DragAndDrop</class>
                    <name>dragAndDrop</name>
                    <category>Extension</category>
                    <description><![CDATA[Drags an element to an other one]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>fromXPath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath allowing to select the element to drag. One of fromXPath and fromHtmlId is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>toXPath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath allowing to select the element to drop on. One of toXPath and toHtmlId is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>fromHtmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the html element to drag. One of fromXPath and fromHtmlId is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>toHtmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the html element to drop on. One of toXPath and toHtmlId is required.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyNumberOfFieldsStep</class>
                    <name>pdfVerifyFieldCount</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the number of fields in the <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>count</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The expected number of fields.]]></description>
                            </parameter>
                            <parameter>
                                <name>page</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The numeric value of the page to restrict the verification to.]]></description>
                            </parameter>
                            <parameter>
                                <name>includeDuplicates</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Specifies whether fields with the same name should be counted only once or individually.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyFieldCount">
        <include src='pdfexamples/verifyFieldCountExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyCookie</class>
                    <name>verifyCookie</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to check an <key>HTTP</key> Cookie value.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the cookie of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The text of the cookie of interest. If omitted just checks for existence of the cookie.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                    <post>

    <b><em>See also</em>: the <stepref name="storeCookie"/> step (it has an example of this step's usage).</b>

</post>
                </step>
                <nested>
                    <class>com.canoo.webtest.engine.Option</class>
                    <name>option</name>
                    <category>General</category>
                    <description><![CDATA[Backdoor to configure HtmlUnit directly.]]></description>
                    <pre>
    <b>
        Option elements belong to the config rather than to a specific invocation, because they
        reflect browser settings. They are unlikely to change during a conversation.
    </b>

</pre>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the option, e.g. <example>ThrowExceptionOnFailingStatusCode</example>, <example>ThrowExceptionOnScriptError</example> or <example>JavaScriptEnabled</example>.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The option value. e.g. <example>false</example>]]></description>
                            </parameter>
                    <pre>
    <b>Option settings provide a crude mechanism to alter settings provided by the underlying
        browser client layer. This sometimes allows settings needed for a particular test to be changed
        without coding. They may stop working if supporting jar file versions change or if
        WebTest provides more complete support via a different approach in the future. See the JavaDoc
        for
        <em>Target</em>
        for more details - look in the source as the relevant JavaDocs are
        for private methods and do not show in the published JavaDocs.
    </b>
</pre>
                </nested>
                <step>
                    <class>com.canoo.webtest.extension.LineSeparatorFilter</class>
                    <name>lineSeparatorFilter</name>
                    <category>Filter</category>
                    <description><![CDATA[Replaces all <em>line.separator</em> combinations within (part of) a response by a <em>LF</em> to support platform independent content processing. For use with steps which take a <em>ContentFilter</em>.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                    <post>

    <b>This content filter can be useful in environments with mixed Unix/Windows/Mac machines or if there are differences
        in your development and build environments related to version control systems. E.g., some of your development
        environments or your continuous integration/build environment may have gzip compression for CVS access
        turned on (which will bypass line separator expansion on Windows machines). In general, it is recommended
        that you always use this filter for steps which take content filters. It isn't very expensive and will
        make your builds and tests resistant to future changes in operating systems and/or other settings.</b>

    <b>See the <stepref name="verifyContent"/>,
        <stepref name="storeLength"/> and
        <stepref name="storeDigest"/> steps for some examples of using this content filter.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.exceltest.ExcelStructureFilter</class>
                    <name>excelStructureFilter</name>
                    <category>Excel</category>
                    <description><![CDATA[Extracts the structure of the current <key>xls</key> document, as a xml file.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                    <post>
    <b>
        Here is an example of using <em>excelStructureFilter</em>:
    </b>

    <code caption='excelStructureFilter example'>
        <include src='excelExamples/structureFilterExample.xml'/>
    </code>

    <b>As a result of invoking the above steps a file would be created containing something like the following:</b>

    <code caption='excelStructureFilter output'>
        <include src='excelExamples/structureFilterOutput.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.request.FollowFrame</class>
                    <name>followFrame</name>
                    <category>Core</category>
                    <description><![CDATA[Locates a frame by its name (e.g. <em><FRAME NAME='myFrame' SRC='myPage.jsp'></em>) and defines it as the "current" response for the next steps.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the frame to select. One of 'name' or 'htmlid' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the frame to follow, specified in the frameset. For nested frames use the name of the frame your are after, e.g. it may be the name in the nested frameset. NOTE: if nested frames bear the same name (e.g. foo inside foo), it is not specified which of the frames will be selected. It is possible to select the top window using the special name '_top'. One of 'name' or 'htmlid' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>relative</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Indicates that the frame with the given name should be searched in the current response (rather than in the top window). In the case of nested frames this allows you to follow a first frame, perform some actions and later to follow the nested frame.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alternative way to set the 'name' attribute.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                    <post>

    <code caption="followFrame">
        <include src='examples/followframeExample.xml'/>
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfToFontsFilter</class>
                    <name>pdfToFontsFilter</name>
                    <category>PDF</category>
                    <description><![CDATA[Extracts all font information from within the current <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                    <post>
    <b>
        Here is an example of using <em>pdfToFontsFilter</em>:
    </b>

    <code caption='pdfToFontsFilter example'>
        <include src='pdfexamples/toFontsFilterExample.xml'/>
    </code>

    <b>As a result of invoking the above steps a file would be created containing something like the following:</b>

    <code caption='pdfToFontsFilter output'>
        <include src='pdfexamples/toFontsFilterOutput.xml'/>
    </code>

    <b>
        The first column is the page number, the second column is the font type
        and the third column is the font name.
    </b>
</post>

                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailStorePartCount</class>
                    <name>emailStorePartCount</name>
                    <category>Email</category>
                    <description><![CDATA[Stores the number of parts found within a message. For old-style (non-MIME) uuencoded messages, this returns the number of uuencoded attachments. For new style MIME messages, it returns the number of MIME parts found.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>messageId</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The message id.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The target property name.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The target property type. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>
        Here is an example of using the <em>emailStorePartCount</em> step.
    </b>

    <code caption="emailStorePartCount">
        <include src='emailexamples/emailStorePartCountExample.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyInputField</class>
                    <name>verifyInputField</name>
                    <category>Core</category>
                    <description><![CDATA[This step verifies the value of a particular input field. It is typically used to check that input field defaults are correctly set.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The value of the input field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the form containing the field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index (starting at 0) of the field of interest (if more than one).]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.ant.CountWebtestResults</class>
                    <name>countWebtestResults</name>
                    <category>Extension</category>
                    <description><![CDATA[This <key>ANT</key> task counts the WebTest results in the provided result file and can produce a build failure when some webtests have failed]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>failOnError</name>
                                <required>no</required>
                                <default>true</default>
                                <description><![CDATA[Stops the build process if a webtest failed.]]></description>
                            </parameter>
                            <parameter>
                                <name>failureProperty</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the Ant property that will be set with the numbers of failures. The property is not set if no failure was found.]]></description>
                            </parameter>
                            <parameter>
                                <name>successProperty</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the Ant property that will be set with the numbers of successful webtests. The property is not set if no successful test was found.]]></description>
                            </parameter>
                            <parameter>
                                <name>resultFile</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[the file containing the WebTest results]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.StoreRandom</class>
                    <name>storeRandom</name>
                    <category>Extension</category>
                    <description><![CDATA[Provides the ability to store a random number, string or token value for later processing. Useful to avoid setting (and maintaining) large numbers of properties containing test data when specific test values aren't important.]]></description>
                    <pre>
    <b>
        Maintaining test data can be one of the biggest challenges
        with keeping a test suite relevant and not too brittle as
        environments, requirements and external factors change. Random
        data provides another valuable tool to assist in maintaining test
        data in complex systems.
    </b>
    <b>
        Care must be exercised when using random data. If selecting test
        data by hand, careful choices can be made to ensure that boundary
        cases are covered by tests. Using purely random data may make this
        harder to do. Having said that, random data
        can simplify build scripts, can reduce the risk that poor
        test cases are chosen and lends itself to being suitable for
        load or stress testing with different data in multiple test runs.
    </b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>from</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Used when storing a random number. The random number stored will be greater than or equal to this number. Required if <em>to</em> is set. Parameters <em>length</em> and <em>choice</em> must be empty.]]></description>
                            </parameter>
                            <parameter>
                                <name>to</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Used when storing a random number. The random number stored will be less than or equal to this number. Required if <em>from</em> is set. Parameters <em>length</em> and <em>choice</em> must be empty.]]></description>
                            </parameter>
                            <parameter>
                                <name>length</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Used when storing a random string. The length of the random string to store (i.e. the number of characters to randomly select). Parameters <em>from</em>, <em>to</em> and <em>choice</em> must be empty.]]></description>
                            </parameter>
                            <parameter>
                                <name>chars</name>
                                <required>no</required>
                                <default>the upper and lowercase alphabets plus numbers plus spaces</default>
                                <description><![CDATA[Used when storing a random string. The set of characters to choose from when creating the random string. Ignored unless <em>length</em> is set.]]></description>
                            </parameter>
                            <parameter>
                                <name>choice</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Used when storing a random token. The comma delimited choice of tokens to randomly select between. Parameters <em>from</em>, <em>to</em> and <em>length</em> must be empty.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the retrieved value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>Consider the following JSP which allows user preference information to be gathered
        in a form and produces a subsequent page based on the choices made:</b>

    <code caption='storeRandom JSP under test'>
        <include src='examples/favouriteJsp.xml'/>
    </code>

    <b>If a field value in our form takes on one of several values, e.g.
        the colours in this example, we can randomly select a value to
        use from that list of tokens:</b>

    <code caption='storeRandom token Example'>
        <include src='examples/storeRandomExample1.xml'/>
    </code>

    <b>Here is an example which selects a random number for a field
        expecting a number between 1 and 6 (corresponding to setting
        the heading level to be one of "H1" through "H6"). Note that we also allow
        some numbers outside the desired range to test that server validation
        is working (in our examples it rounds to the nearest valid value):</b>

    <code caption='storeRandom number Example'>
        <include src='examples/storeRandomExample2.xml'/>
    </code>

    <b>We can combine XPath with random selection to perform very powerful
        operations, e.g. in this example we randomly select one of the "option"
        values from a "select" element in the
        <key>HTML</key> form (note that in this example we skip over the empty
        option value by starting the random number at "2"):</b>

    <code caption='storeRandom tricky number and XPath Example'>
        <include src='examples/storeRandomExample3.xml'/>
    </code>

    <b>In this final example, we generate random first and last names. Each name
        starts with a random uppercase character, and is followed by a random
        number of random lowercase characters:</b>

    <code caption='storeRandom string Example'>
        <include src='examples/storeRandomExample4.xml'/>
    </code>

    <b>The full example (found in <em>storeRandom.xml</em> in the selftests) the test
        then goes on to submit the form (by clicking its button) which causes a new page
        to be created based on the preferences chosen in the form. The form is then tested
        to ensure the actual attributes used to generate the form match the above
        randomly generated expected values.</b>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyTextFieldStep</class>
                    <name>pdfVerifyTextField</name>
                    <category>PDF</category>
                    <description><![CDATA[Verifies a text field in the <key>pdf</key> document. According to the <key>pdf</key> specification, fields with the same name must have the same value.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text of the <em>info</em> dictionary property key.]]></description>
                            </parameter>
                            <parameter>
                                <name>page</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The numeric value of the page to restrict the verification to.]]></description>
                            </parameter>
                            <parameter>
                                <name>exists</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Specifies whether the property/field of interest is expected to exist or not. Must not be set if 'value' attribute is set.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text/<key>regex</key> required to match the property/field of interest. Must not be set if 'exists' attribute is set.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyTextField 1">
        <include src='pdfexamples/verifyTextFieldExample1.xml' />
    </code>

    <code caption="pdfVerifyTextField 2">
        <include src='pdfexamples/verifyTextFieldExample2.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.SelectLinesFilter</class>
                    <name>selectLinesFilter</name>
                    <category>Filter</category>
                    <description><![CDATA[Removes or keeps lines starting at a <em>start</em> <key>regex</key> until a <em>stop</em> <key>regex</key>. For use with steps which take a <em>ContentFilter</em>.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>startRegex</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The regex to start selecting from. One of 'startRegex' or 'stopRegex' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>includeStart</name>
                                <required>no</required>
                                <default>true</default>
                                <description><![CDATA[Whether to include the line the start regex was found on.]]></description>
                            </parameter>
                            <parameter>
                                <name>stopRegex</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The regex to stop selecting from. One of 'startRegex' or 'stopRegex' must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>includeStop</name>
                                <required>no</required>
                                <default>true</default>
                                <description><![CDATA[Whether to include the line the stop regex was found on.]]></description>
                            </parameter>
                            <parameter>
                                <name>remove</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Indicates that selected lines will be removed (true) or kept (false).]]></description>
                            </parameter>
                            <parameter>
                                <name>repeat</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Indicates that the first (false) or all (true) lines between start and stop <key>regex</key> patterns will be selected. Only relevant if the patterns occur multiple times throughout the response.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.dialogs.ExpectDialogs</class>
                    <name>expectDialogs</name>
                    <category>Extension</category>
                    <description><![CDATA[Provides the ability to set expectations in relation to user responses to <key>javascript</key> Dialog boxes (Alert, Confirm and Prompt dialogs). Supports nested dialog steps such as <stepref name='alert'/>, <stepref name='confirm'/> and <stepref name='prompt'/>. See also the <stepref name='verifyNoDialogs'/> step.]]></description>
                    <pre>

    <b>This step is used prior to clicking on a link or button
    which invokes some <key>javascript</key> that uses dialogs (Alert, Confirm or Prompt dialogs).
    If you don't use this step, <key>CWT</key> simply clicks 'OK' on every dialog silently.
    This is OK if you don't care about the Dialogs, but if you do care, you have no way of
    telling if anything was actually clicked or what messages were displayed in the dialogs.</b>

    <b>You may be wondering why you need to set up expectations prior to clicking on a link
    or button. This is mostly due to implementation issues with the way <key>CWT</key> works
    and the way it calls <key>htmlunit</key>. It turns out to be easier at the moment to
    create a list of dialog expectations. As interactions with your application cause
    <key>javascript</key> to invoke dialogs, we simply look at the next dialog expectation
    on the list, check that it meets expectations (or optionally save away the dialog
    message text) and then remove it from the list.
    For tricky <key>javascript</key> there may be multiple interactions from the user.
    We simply list all the expected dialog interactions in the order we expect them to occur.
    </b>

    <b>Often you will use the
        <stepref name="verifyNoDialogs"/>
        step in conjunction
        with this step to ensure that your expectations for dialogs were met. The
        <stepref name="verifyNoDialogs"/>
        step is used after clicking on your link or button - it
        checks that the list of expected dialogs is now empty, i.e. by the
        time you have finished interacting with your application all the dialogs you
        were expecting to need clicking were actually clicked.
    </b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <b>Normally only one nested dialog step will be required within this step but if you have
    complex <key>javascript</key>, it may require the user to respond to multiple dialogs associated
    with one form or link click. If this is the case (as in the complex example below) you should
    use multiple nested steps in the same order that the user would respond to them in.
    Only one <stepref name="verifyNoDialogs"/> is ever required after the click event
    to check that everything worked as planned.</b>

    <b>If you were expecting the <key>javascript</key> to invoke 2 dialog but only one was in fact
    invoked, the <stepref name="verifyNoDialogs"/> step will fail with an appropriate error message.
    Similarly, if you expected only one dialog interaction but more occurred, the intervening click
    request step will fail.</b>

<b><em>Simple Example</em></b>

    <b>Consider the following <key>HTML</key> form:</b>

    <b><img src="images/dialog_simpleapp.gif"/></b>

    <b>If the user leaves fields blank, we want to pop up an alert as follows:</b>

    <b><img src="images/dialog_simplealert.gif"/></b>

    <b>The <key>HTML</key> might look something like:</b>

    <code caption='Simple dialog example HTML'>
     <include src='examples/dialogSimpleExampleHtml.xml' />
    </code>

    <b>The test might look something like:</b>

    <code caption='Simple dialog example Test'>
     <include src='examples/expectDialogsSimpleExampleTest.xml' />
    </code>

<b><em>Complex Example</em></b>

    <b>Consider an application which performs some disk administration (the samples below
    don't actual do anything but show the kind of <key>javascript</key> messages that such
    an application would need to use).</b>

    <b><img src="images/dialog_app.gif"/></b>

    <b>When the user clicks the clean button they receive a <key>javascript</key> confirm dialog:</b>

    <b><img src="images/dialog_confirm.gif"/></b>

    <b>If the user selects "Cancel" they receive the following alert:</b>

    <b><img src="images/dialog_alert1.gif"/></b>

    <b>If the user selects "OK" they receive the following prompt dialog as a precaution:</b>

    <b><img src="images/dialog_prompt.gif"/></b>

    <b>If the user then clicks "Cancel" or enters incorrect text, e.g. "No" in the prompt, they receive the following alert dialog:</b>

    <b><img src="images/dialog_alert2.gif"/></b>

    <b>If the user enters the correct "YES" text and clicks "OK", they receive the following alert dialog (<em>NOTE</em>: nothing happens despite the message - this is just a hypothetical demo):</b>

    <b><img src="images/dialog_alert3.gif"/></b>

    <b>Here is the relevant part of the build.xml:</b>

    <code caption='Complex example test'>
     <include src='examples/expectDialogsComplexExampleTest.xml' />
    </code>

    <b>This assumes you have some <key>HTML</key> containing a form and some <key>javascript</key> something like the following:</b>

    <code caption='Complex example HTML/JavaScript'>
     <include src='examples/dialogComplexExampleHtml.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.StoreLength</class>
                    <name>storeLength</name>
                    <category>Extension</category>
                    <description><![CDATA[Stores a length value for the response (or part of the response) into a property. This is useful when you don't care about the content within a response but wish to ensure that at least the length hasn't changed from some expected value. Supports content filters such as <stepref name='lineSeparatorFilter'/> and <stepref name='replaceFilter'/> to allow you to filter out content that you are not interested in and the <stepref name='table' category='Core'/> locator step if you are interested in content within a table.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The target property type. Either "ant" or "dynamic".]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The target property name.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The id of an <key>HTML</key> element. If present, processing will be limited to this element. Will be ignored if a nested <stepref name='table'/> step is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An XPath expression identifying an <key>HTML</key> element. If present, processing will be limited to this element. Will be ignored if <em>htmlId</em> is set or if a nested <stepref name='table'/> step is used.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addTable</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[To locate a specific cell in a specific table on the page.]]></description>
                            </nestedParameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <b>The following example illustrates how to use the <em>storeLength</em> step (illustrating
        the use of the nested table locator step):</b>

    <code caption="storeLength example">
        <include src='examples/storeLengthExample.xml'/>
    </code>

    <b>One of the ways to calculate the length value (so that you can write the test) is to use a
        dummy value (e.g. '999') and then run the test. Then when it fails it will tell you what it was expecting.
        Simply copy that value into your test. Eventually we may store length values in a file and populate the
        file for you the first time the test is run or we may have a tool (e.g. Mozilla plug-in or one of the
        other recorder tools) to pre-calculate length values for you.</b>

    <b><em>See also</em>: the <stepref name="verifyContent"/>,
        <stepref name="storeDigest"/>,
        <stepref name="lineSeparatorFilter"/>,
        <stepref name="replaceFilter"/>,
        <stepref name="tagStripper"/> and
        <stepref name="contentStripper"/> steps.
    </b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailDeleteMessage</class>
                    <name>emailDeleteMessage</name>
                    <category>Email</category>
                    <description><![CDATA[Deletes a message with a given <em>messageId</em>.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>messageId</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The message id.]]></description>
                            </parameter>
                    <post>

    <code caption="emailDeleteMessage">
        <include src='emailexamples/emailDeleteMessageExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.exceltest.ExcelSelectSheet</class>
                    <name>excelSelectSheet</name>
                    <category>Excel</category>
                    <description><![CDATA[Provides the ability to select the current sheet. Any subsequent calls to excel steps will use the selected sheet if not overridden]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>sheetName</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the sheet to select. Either <em>sheetName</em> or <em>sheetIndex</em> must be selected.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetIndex</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The index of the sheet to select, starting at zero. Either <em>sheetName</em> or <em>sheetIndex</em> must be selected.]]></description>
                            </parameter>
                    <post>

    <code caption="excelSelectSheet Example">
        <include src='excelExamples/selectSheetExample.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.AntWrapper</class>
                    <name>antWrapper</name>
                    <category>Extension</category>
                    <description><![CDATA[DEPRECATED as native ant tasks are handled transparently. Behaves just like the group step]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addStep</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[A webtest step.]]></description>
                            </nestedParameter>
                    <post>

    <b>The following example illustrates how to use the <em>antWrapper</em> step to invoke
        an <key>ANT</key> task (in this case <em>loadFile</em>) within a <stepref name="webtest"
            category="core"/> test specification:</b>

    <code caption="antWrapper simple example">
        <include src='examples/antWrapperSimpleExample.xml'/>
    </code>

    <b>If you need to test whether your application correctly stores information
        in a database, you can use the <key>ANT</key> <em>sql</em>
        task or the <key>sqlunit</key> task if you have more elaborate requirements.
        Here is an example using <em>sql</em>:</b>

    <code caption="antWrapper macro example">
        <include src='examples/antWrapperSqlExample.xml'/>
    </code>

    <b>
        You can also leave out the <em>antWrapper</em> step if you wish and one will be added for
        you behind the scenes. You can also experiment with using <key>ANT</key> Macros. Here
        is an example showing implicit <em>antWrapper</em> usage and Macros. See the <key>ANT</key>
        documentation for more details on Macros.
    </b>

    <code caption="antWrapper macro example">
        <include src='examples/antWrapperMacroExample.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.StoreLinkParameter</class>
                    <name>storeLinkParameter</name>
                    <category>Extension</category>
                    <description><![CDATA[Extracts the value of the specified parameter in the link and stores it as a property.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The id of the html link to extract from.]]></description>
                            </parameter>
                            <parameter>
                                <name>parameter</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the parameter whose value should be extracted. If the property name is not specified, the parameter name is used as key to store the value found.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the retrieved value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.exceltest.ExcelVerifyCellStyle</class>
                    <name>excelVerifyCellStyle</name>
                    <category>Excel</category>
                    <description><![CDATA[This step verifies the style of a specified cell in an Excel spreadsheet. Only those properties set will be checked.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>format</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The format to check for. eg 0.00 for two decimal places.]]></description>
                            </parameter>
                            <parameter>
                                <name>type</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected cell type. One of <em>blank, numeric, formula, string, boolean or error.</em>]]></description>
                            </parameter>
                            <parameter>
                                <name>align</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected horizontal alignment. One of center, center-selection, fill, general, justify, left, right]]></description>
                            </parameter>
                            <parameter>
                                <name>valign</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected vertical alignment. One of bottom, center, justify, top]]></description>
                            </parameter>
                            <parameter>
                                <name>wrap</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected wrap setting. true or false]]></description>
                            </parameter>
                            <parameter>
                                <name>fontStyle</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected font style. A combination of bold, italic, strikethrough, subscript, superscript, underline, underline-accounting, underline-double, underline-double-accounting separated by spaces, or normal]]></description>
                            </parameter>
                            <parameter>
                                <name>locked</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected locked status. true or false]]></description>
                            </parameter>
                            <parameter>
                                <name>fontName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected font name. eg. Arial or Times]]></description>
                            </parameter>
                            <parameter>
                                <name>fontSize</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected font size in points. eg 10 or 12]]></description>
                            </parameter>
                            <parameter>
                                <name>border</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected border style. One of <em>dash dot, dash dot dot, dashed, dotted, double, hair, medium, medium dash dot, medium dash dot dot, medium dashed, slanted dash dot, thick, thin, none</em>. See below for details on specifying sides.]]></description>
                            </parameter>
                            <parameter>
                                <name>borderColor</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected border color. Specify as #rrggbb or use a standard name. See below for details on specifying sides.]]></description>
                            </parameter>
                            <parameter>
                                <name>textColor</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected text color. Specify as #rrggbb or use a standard name.]]></description>
                            </parameter>
                            <parameter>
                                <name>fillColor</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected foreground cell fill color. Specify as #rrggbb or use a standard name.]]></description>
                            </parameter>
                            <parameter>
                                <name>fillBackgroundColor</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected background cell fill color. Specify as #rrggbb or use a standard name.]]></description>
                            </parameter>
                            <parameter>
                                <name>fillPattern</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected fill pattern. One of <em>none, solid, 50% gray, 75% gray, 25% gray, horizontal stripe, vertical stripe, reverse diagonal stripe, diagonal stripe, diagonal crosshatch, thick diagonal crosshatch, thin horizontal stripe, thin vertical stripe, thin reverse diagonal stripe, thin diagonal stripe, thin horizontal crosshatch, thin diagonal crosshatch, 12.5% gray, 6.25% gray</em>]]></description>
                            </parameter>
                            <parameter>
                                <name>cell</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The spreadsheet cell to select. eg. A5. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>row</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The number of the row to select, starting at 1. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>col</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name or number (starting at 1) of the column to select. eg 1 or A. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the sheet to select. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index of the sheet to select, starting at zero. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                    <post>

    <b>
        Here is an example using the <em>excelVerifyCellStyle</em> step:
    </b>

    <code caption="excelVerifyCellStyle Example">
        <include src='excelExamples/verifyCellStyleExample.xml' />
    </code>

    <b>
        For the <em>border</em> and <em>borderColor</em> properties, you can have fine grained control over what is
        expected for the border on each side of the cell.  Here are some examples:
    </b>
            <code>border="thin"</code> <b>This tests for a thin border all the way around the cell.</b>
            <code>borderColor="left:red"</code> <b>This tests for a red border on the left of the cell.  The other borders are ignored.</b>
            <code>border="top,left:none;bottom:thin;right:dashed"</code> <b>This tests for no borders on the top and left of the cell, a thin border on bottom and a dashed one to the right</b>
            <code>borderColor="#0000ff;top:none"</code> <b>This tests for a blue border on the left, right and top sides and no border on the top.</b>

    <b>
        For the <em>borderColor</em>, <em>textColor</em>, <em>fillColor</em> and <em>fillBackgroundColor</em> properties,
        you can use the following standard color names instead of hex values: <em>aqua, black, blue, blue gray, bright green,
        brown, coral, dark blue, dark green, dark purple, dark red, dark teal, dark yellow, gold, green, 25% gray, 40% gray,
        50% gray, 80% gray, ice blue, indigo, ivory, lavender, light blue, light green, light orange, light turquoise,
        light yellow, lime, maroon, ocean blue, olive green, orange, pale blue, periwinkle, pink, plum, red, rose, sea green,
        sky blue, tan, teal, turquoise, violet, white, yellow.</em>
    </b>
</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyTitle</class>
                    <name>verifyTitle</name>
                    <category>Core</category>
                    <description><![CDATA[This step verifies whether the text enclosed by the <key>HTML</key> title tag (<TITLE> ... </TITLE>) matches some specified text. The specified text can represent a <key>regex</key>.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alternative way to set the 'text' attribute.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                    <post>

    <code caption="verifyTitle example">
        <include src='examples/verifytitleExample.xml' />
    </code>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.form.SetCheckbox</class>
                    <name>setCheckbox</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to check and uncheck checkboxes in <key>HTML</key> forms.]]></description>
                    <pre>

    <b>The checkbox to set/unset will be determined by finding the appropriate form followed by
    finding the appropriate field on that form.</b>

    <b><em>Form Selection</em>: in many cases, your page will only have
    one form - that form will be used - you don't need to worry about trying to select the form.
    For tricky cases, you might need to do extra work to select the appropriate form.
    See the <stepref name="setRadioButton"/> step for further details on how to do this.</b>

    <b><em>Field Selection</em>: in many cases, only one field will match the <em>name</em> and <em>value</em>
    of the field you are interested in. In these cases, you don't need to worry about the remaining details
    for selecting fields. For tricky cases, you might need to do extra work to select the appropriate field.
    See the <stepref name="setRadioButton"/> step for further details on how to do this.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>value</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The value to use to select the desired checkbox. If not present, the first possible checkbox is selected.]]></description>
                            </parameter>
                            <parameter>
                                <name>checked</name>
                                <required>false</required>
                                <default>true</default>
                                <description><![CDATA[Specifies if the checkbox shall be checked (true) or unchecked (false).]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An alternative to the attribute value for e.g. large TextAreas.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>forLabel</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text of the label field associated with the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default>the last form selected using 'selectForm', otherwise searches all forms</default>
                                <description><![CDATA[The name of the form containing the field of interest. Ignored if <em>htmlId</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default>the first field found that matches criteria</default>
                                <description><![CDATA[The index of the field of interest (starting at 0) if more than one field matches criteria. Ignored if <em>htmlId</em> or <em>xpath</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                    <post>

    <b>See the following example for plain vanilla checkbox selection. The resulting request submitted by
    &lt;clickButton&gt; will contain a parameter with the checkbox name and as value the default checkbox
    parameter value <em>&quot;on&quot;</em>.</b>

    <code caption="setCheckbox example1">
        <include src='examples/setcheckboxExample1.xml' />
    </code>

    <b>The next example provides explicit values for a checkbox parameter to be submitted with the request.
    Note that a single parameter can have multiple values. This is the case here. The <em>cheese</em> parameter
    has the values <em>&quot;Gorgonzola&quot;</em> and <em>&quot;Mozzarella&quot;</em>.</b>

    <code caption="setCheckbox example2">
        <include src='examples/setcheckboxExample2.xml' />
    </code>

    <b><em>See also</em>: the <stepref name="verifyCheckbox"/> and <stepref name="selectForm"/> steps.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.StoreElementAttribute</class>
                    <name>storeElementAttribute</name>
                    <category>Extension</category>
                    <description><![CDATA[Retrieves a particular attribute value of an element. E.g. the <em>style</em> attribute could be retrieved for an <key>HTML</key> element such as <TD style='color:green' ...>]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the html element to click on.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The XPath identifying the html element to click on.]]></description>
                            </parameter>
                            <parameter>
                                <name>attributeName</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the attribute of interest, e.g. "disabled" or "checked".]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Deprecated. Same as property.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the retrieved value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>See the <stepref name="clickElement"/> step for an example which uses the <em>&lt;storeElementAttribute&gt;</em> step.
    See also the <stepref name="storeInputFieldAttribute"/> step to store an attribute of a <key>HTML</key> form input element
        using form-related criteria.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.exceltest.ExcelVerifyCellSum</class>
                    <name>excelVerifyCellSum</name>
                    <category>Excel</category>
                    <description><![CDATA[This step verifies that a cell represents the sum of a range of cells, either as a formula (=SUM(<range>)) or numeric value.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>range</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The range of cells to verify sum against. (eg 'A1:A5')]]></description>
                            </parameter>
                            <parameter>
                                <name>cell</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The spreadsheet cell to select. eg. A5. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>row</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The number of the row to select, starting at 1. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>col</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name or number (starting at 1) of the column to select. eg 1 or A. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the sheet to select. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index of the sheet to select, starting at zero. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                    <post>

    <code caption="excelVerifyCellSum Example">
        <include src='excelExamples/verifyCellSumExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifyXPath</class>
                    <name>verifyXPath</name>
                    <category>Core</category>
                    <description><![CDATA[This step verifies that an <key>XPATH</key> expression is true or has a certain value. Useful for <key>XML</key> and <key>HTML</key> pages.]]></description>
                    <pre>

    <b>This is one of the most powerful verification features of <key>CWT</key>.
    You may want to use <key>XPE</key> for finding appropriate expressions.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>text</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The expected text value of the xpath evaluation. If omitted the step checks that the result is not the boolean false and not empty.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>true</required>
                                <default></default>
                                <description><![CDATA[Specifies the <key>XPATH</key> expression to evaluate.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text value represents a <key>regex</key>.]]></description>
                            </parameter>
                    <post>

    <code>
        <include src='examples/verifyxpathExample1.xml'/>
    </code>

    <b>
        <em>See also</em>: the <stepref name="storeXPath"/> and <stepref name="selectForm"/> steps.
    </b>

</post>

                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyTextStep</class>
                    <name>pdfVerifyText</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the existence of the specified text in the <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>startPage</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The numeric value of the start page to restrict the verification to.]]></description>
                            </parameter>
                            <parameter>
                                <name>endPage</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The numeric value of the end page to restrict the verification to.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Specifies whether the text represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text expected in the PDF document.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyText">
        <include src='pdfexamples/verifyTextExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.request.ClickElement</class>
                    <name>clickElement</name>
                    <category>Extension</category>
                    <description><![CDATA[Clicks an <key>HTML</key> element identified by its <em>id</em> or <em>xpath</em>. If the click triggers the load of a new page, then this page becomes the current one.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the html element to click on. One of <em>htmlId</em> or <em>xPath</em> must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The XPath identifying the html element to click on. One of <em>htmlId</em> or <em>xPath</em> must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>username</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A username that can be provided for pages that require basic authentication. Typically only needed on the first step of any <stepref name='webtest'/> accessing a secure site. Required if <em>password</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>password</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A password that can be provided for pages that require basic authentication. Required if <em>username</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                    <post>

    <b>Consider the following <key>HTML</key> page:</b>

    <code caption="clickElement HTML">
        <include src='examples/clickElementExampleHtml.xml' />
    </code>

    <b>The page contains no links or buttons but we want to be able to
    activate and check the onclick <key>javascript</key>. We can do this
    using the <em>&lt;clickElement&gt;</em> step as follows:</b>

    <code caption="clickElement Example">
        <include src='examples/clickElementExample.xml' />
    </code>

    <b><em>See also:</em> the <stepref name='storeElementAttribute'/> step.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.verify.VerifySelectField</class>
                    <name>verifySelectField</name>
                    <category>Core</category>
                    <description><![CDATA[This step verifies whether a particular SELECT - Option Selector exists and is marked as selected. The option selector may be chosen by either its <em>value</em> attribute or the <em>text</em> associated with the selector.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The option text. Specification of either <em>text</em> or <em>value</em> is mandatory.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the text or value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The value of the input field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the form containing the field of interest.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index (starting at 0) of the field of interest (if more than one).]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>name</em>, <em>htmlId</em> or <em>xpath</em> is required.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.ForceHiddenInputField</class>
                    <name>forceHiddenInputField</name>
                    <category>Extension</category>
                    <description><![CDATA[Sets the value of a hidden input field. An example usage would be for a hidden input field that would normally be set by some unsupported <key>javascript</key>.]]></description>
                    <pre>
    <b>
        This step provides a mechanism to alter the value of a hidden input field.
        Hidden input fields are often used within forms to help with state management
        of a web application. They are often set using <key>javascript</key> and because
        not all features of <key>javascript</key> are supported by <key>CWT</key>,
        it can sometimes be useful to mimic what the <key>javascript</key> would
        do with a manual step.
    </b>
    <b>
        If you have a very sophisticated web application that makes use of a lot of
        hidden input fields for your state management, this step can assist you in
        partitioning your tests into their functional and "unit" aspects. Firstly,
        you write "unit" tests where you manipulate your application in various
        ways and check that the hidden fields are set appropriately. These don't
        require invoking the server application so they run fast. Then you run
        some functional tests which check that for a given set of values of
        the hidden fields, your application performs as expected.
    </b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The value to use when setting the field of interest.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An alternative to the attribute value for e.g. large TextAreas.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>forLabel</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text of the label field associated with the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default>the last form selected using 'selectForm', otherwise searches all forms</default>
                                <description><![CDATA[The name of the form containing the field of interest. Ignored if <em>htmlId</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default>the first field found that matches criteria</default>
                                <description><![CDATA[The index of the field of interest (starting at 0) if more than one field matches criteria. Ignored if <em>htmlId</em> or <em>xpath</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                    <post>

    <b>Consider the following <key>HTML</key> form:</b>

    <code caption='hiddenInputFieldPage.html'>
    <include src='examples/forceHiddenInputFieldPageHtml.xml' />
    </code>

    <b>This page contains some <key>javascript</key> functionality which sets a hidden field.
    We would like to use the <em>&lt;forceHiddenInputField&gt;</em> step to check that the hidden
    field is being set correctly. When the form is first loaded, the hidden field should
    be set to 'zzz'. We can then place some content into 'field1'. We can then check that the
    hidden field was successfully changed to 'xxx'. Here is an example test script:</b>

    <code caption='hiddenInputField Example1'>
        <include src='examples/forceHiddenInputFieldExample1.xml'/>
    </code>

    <b>We can try to do the same thing for 'field2', however because the <em>onkeyup</em> <key>javascript</key>
    event is not supported, the hidden field remains unchanged. We can then use the
    <em>&lt;forceHiddenInputField&gt;</em> to force the hidden field change to 'yyy'.
    Here is the script code:</b>

    <code caption='hiddenInputField Example2'>
        <include src='examples/forceHiddenInputFieldExample2.xml'/>
    </code>

    <b><em>See also</em>: the <stepref name="storeXPath" category="Core"/> and <stepref name="verifyXPath" category="Core"/> steps which can be used to read/verify hidden fields.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailStorePartFilename</class>
                    <name>emailStorePartFilename</name>
                    <category>Email</category>
                    <description><![CDATA[Stores the filename of a message part. Fails if the message contains no parts or if the partIndex is invalid or if the part is an inline part with no filename.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>partIndex</name>
                                <required>no</required>
                                <default>0, the first part</default>
                                <description><![CDATA[The index of the message part of interest. If set for a <em>Simple</em> message, will search for a UU-encoded attachment within the message.]]></description>
                            </parameter>
                            <parameter>
                                <name>messageId</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The message id.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The target property name.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The target property type. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>
        Here is an example of using the <em>emailStorePartFilename</em> step.
    </b>

    <code caption="emailStorePartFilename">
        <include src='emailexamples/emailStorePartFilenameExample.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.request.ClickButton</class>
                    <name>clickButton</name>
                    <category>Core</category>
                    <description><![CDATA[This step is used to locate a form button and then click it.]]></description>
                    <pre>
    <b>
Currently tested and thus officially supported are the following variations of buttons:</b>
        <dl>
            <li>
                <dd>
                    <em>&lt;input type=&quot;submit&quot; .../&gt;</em>
                </dd>
            </li>
            <li>
                <dd>
                    <em>&lt;input type=&quot;image&quot; .../&gt;</em>
                </dd>
            </li>
            <li>
                <dd>
                    <em>&lt;input type=&quot;button&quot; .../&gt;</em>
                </dd>
            </li>
            <li>
                <dd>
                    <em>&lt;input type=&quot;reset&quot; .../&gt;</em>
                </dd>
            </li>
            <li>
                <dd>
                    <em>&lt;button .../&gt;</em>
                </dd>
            </li>
        </dl>
If neither 'label', 'name', 'htmlid', nor 'xpath' is specified, the first button found is clicked (in document order, looking first in the current
form, if any).
</pre>

                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The NAME attribute for the button of interest. Name has lower precedence than <em>htmlId</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default>0</default>
                                <description><![CDATA[The index (starting with 0) of the button to click within the buttons having the specified label and/or name. Useful for instance to distinguish two buttons having the same name.]]></description>
                            </parameter>
                            <parameter>
                                <name>x</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Optional X coordinate of click within an image button. If set, Y coordinate must also be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>y</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Optional Y coordinate of click within an image button. If set, X coordinate must also be set.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Alternative way to set the 'label' attribute.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>xpath</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the button to click.]]></description>
                            </parameter>
                            <parameter>
                                <name>label</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The label of the button to click. This is the text representation for a text button or the alt attribute for an image button]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The html id of the button to click.]]></description>
                            </parameter>
                            <parameter>
                                <name>username</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A username that can be provided for pages that require basic authentication. Typically only needed on the first step of any <stepref name='webtest'/> accessing a secure site. Required if <em>password</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>password</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A password that can be provided for pages that require basic authentication. Required if <em>username</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                    <post>

    <b>The most simple usage of <em>&lt;clickButton&gt;</em> is to submit a
    simple <key>HTML</key> form back to the server. Consider the following <key>HTML</key> form snippet:</b>

    <code caption="HTML">
        <include src='examples/clickbuttonExampleHtml1.xml' />
    </code>

    <b>The following test code sets a value for the input field and submits the
    form. It assumes that the form is shown again with the input field echoing the
    previously entered value:</b>

    <code caption="clickButton 1">
        <include src='examples/clickbuttonExample1.xml' />
    </code>

    <b>A more complex sample uses the <stepref name="selectForm"/> step to select a form in which the submit button shall be located. This could be
    helpful if all forms on a page have a submit button called &quot;send&quot;. See the following <key>HTML</key> code:</b>

    <code caption="HTML">
        <include src='examples/clickbuttonExampleHtml2.xml' />
    </code>

    <b>The submit button in the second form can be located using the following test step:</b>

    <code caption="clickButton 2">
        <include src='examples/clickbuttonExample2.xml' />
    </code>

    <b>For cases where a form has many buttons that can't be easily differentiated, it is possible to resolve the ambiguity by using the index property. This specifies which instance of the button appearing in the form shall be taken. The following example shows how to click the second button of the form:</b>

    <code caption="HTML">
        <include src='examples/clickbuttonExampleHtml3.xml' />
    </code>

    <code caption="clickButton 3">
        <include src='examples/clickbuttonExample3.xml' />
    </code>

    <b><em>Note:</em> The value must be &quot;1&quot; in order to specify the 2nd button. It has the index &quot;1&quot; whereas the first button has the index
    &quot;0&quot;.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailStoreMessageType</class>
                    <name>emailStoreMessageType</name>
                    <category>Email</category>
                    <description><![CDATA[Stores a string representing the message type, either '<em>Simple</em>' or '<em>MultiPart</em>'.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>messageId</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The message id.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The target property name.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The target property type. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <code caption="emailStoreMessageType">
        <include src='emailexamples/emailStoreMessageTypeExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.form.SetSelectField</class>
                    <name>setSelectField</name>
                    <category>Core</category>
                    <description><![CDATA[Provides the ability to update select fields in <key>HTML</key> forms.]]></description>
                    <pre>

    <b>The select field to set will be determined by finding the appropriate form followed by
    finding the appropriate field on that form unless an xpath or html id is provided for a direct access. 
	Once the appropriate select field is chosen the appropriate option within the field to set is determined.</b>

    <b><em>Form Selection</em>: In many cases, your page will only have
    one form - that form will be used - you don't need to worry about trying to select the form.
    For tricky cases, you might need to do extra work to select the appropriate form.
    See the <stepref name="setRadioButton"/> step for further details on how to do this.</b>

    <b><em>Field Selection</em>: in many cases, only one field will match the <em>name</em>
    of the field you are interested in. In these cases, you don't need to worry about the remaining details
    for selecting fields. For tricky cases, you might need to do extra work to select the appropriate field.
    See the <stepref name="setInputField"/> step for further details on how to do this.
	If <em>xpath</em> or <em>htmlId</em> identifies a select, then one of <em>value</em>, <em>text</em>, 
	or <em>optionIndex</em> is required to identify the option within the select.
	</b>

    <b><em>Option Selection</em>: the option to set is selected as follows:
    </b><dl>
        <li><dd>If the <em>xpath</em> value identifies an option, set that option.</dd></li>
        <li><dd>If the <em>htmlId</em> value identifies an option, set that option.</dd></li>
        <li><dd>If an option in the chosen select field matches by <em>value</em>, set that option.</dd></li>
        <li><dd>If an option in the chosen select field matches by its <em>text</em>, set that option.</dd></li>
        <li><dd>If an option in the chosen select field matches by its <em>optionIndex</em>, set that option.</dd></li>
    </dl>

    <b><em>NOTE</em>: A <key>regex</key> can be specified if a particular option is selected by its text.</b>

</pre>

                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>multiselect</name>
                                <required>false</required>
                                <default>false</default>
                                <description><![CDATA[Specifies whether multiple selections are allowed. Unless set to true, every setselect overrides the value of preceding calls.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Specifies whether the option text represents a regular expression.]]></description>
                            </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text of the option to select (i.e. the text nested in the option tag. One of <em>text</em>, <em>value</em> or <em>optionIndex</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>optionIndex</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The index of the option to select (i.e. the position of the option in the select starting with 0). One of <em>text</em>, <em>value</em> or <em>optionIndex</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>userName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A username that can be provided for pages that require basic authentication. Only needed if setting the select field invokes <key>javascript</key> and causes the page to move to a secure page. Required if <em>password</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>password</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A password that can be provided for pages that require basic authentication. Required if <em>userName</em> is specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of any received responses. Only needed if setting the select field invokes <key>javascript</key> which causes the browser to move to another page.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of any received responses. Overrides the default value set in the <config> element. Only needed if setting the select field invokes <key>javascript</key> which causes the browser to move to another page.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The value of the option to select (i.e. the value of the "value" attribute of a select element). One of <em>text</em>, <em>value</em> or <em>optionIndex</em> is required.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[An alternative to the attribute value for e.g. large TextAreas.]]></description>
                            </nestedParameter>
                            <parameter>
                                <name>name</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>forLabel</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text of the label field associated with the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The xpath of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>formName</name>
                                <required>no</required>
                                <default>the last form selected using 'selectForm', otherwise searches all forms</default>
                                <description><![CDATA[The name of the form containing the field of interest. Ignored if <em>htmlId</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the input field of interest. One of <em>forLabel</em>, <em>htmlId</em>, <em>name</em>, or <em>xpath</em> is required.]]></description>
                            </parameter>
                            <parameter>
                                <name>fieldIndex</name>
                                <required>no</required>
                                <default>the first field found that matches criteria</default>
                                <description><![CDATA[The index of the field of interest (starting at 0) if more than one field matches criteria. Ignored if <em>htmlId</em> or <em>xpath</em> is used.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                    <post>

    <b>See the following example for selecting a single entry from a list by its value.</b>

    <code caption="setSelectField 1">
        <include src='examples/setselectfieldExample1.xml' />
    </code>

    <b>The next example illustrates the selection of multiple values.</b>

    <code caption="setSelectField 2">
        <include src='examples/setselectfieldExample2.xml' />
    </code>

    <b><em>Note:</em> If values are selected with <em>multiselect="true"</em> existing selections are preserved. This is also
    true for items pre-selected in the <key>HTML</key> page using <em>&lt;option value="..." selected&gt;</em>.</b>

    <b><em>See also</em>: the <stepref name="verifySelectField"/> and <stepref name="selectForm"/> steps.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.extension.ScriptStep</class>
                    <name>scriptStep</name>
                    <category>Extension</category>
                    <description><![CDATA[Provides the ability to use scripting code in your tests.]]></description>
                    <pre>
    <b><key>ANT</key> has a normal style requiring declarative specification
        of your build tasks. If you find this too limiting in certain scenarios,
        Ant provides a <em>script</em> task which lets you dive into
        (non-declarative) scripting code. The same need occurs within your <key>CWT</key>
        steps; perhaps you need to do something not supported by the standard
        steps, or perhaps you wish to perform some tests in a way better-suited
        to programmatic rather than declarative means.</b>
    <b>This step helps in these scenarios by providing a wrapper around the
        <key>ANT</key> <em>script</em> task. Before providing the supplied
        script to the <key>ANT</key> script task, <em>scriptStep</em>
        expands any WebTest dynamic properties and defines some useful variables.
        Results from running the script can be made available for subsequent steps to use.
    </b>

    <b>
        The language must be one of those supported by the
        <key>BSF</key> which means one of
        <key>javascript</key>, Python (using either Jython or JPython), Tcl (using Jacl), NetRexx,
        <key>XSLT</key> Stylesheets, Java (using BeanShell), JRuby,
        <key>groovy</key>, ObjectScript, and JudoScript. See also the BSF
        documentation for other languages which BSF has supported in the past - you might
        be able to get other languages working with a bit of work.
    </b>

    <b>WebTest has all the necessary files
        to support <key>groovy</key> and <key>javascript</key>
        natively (and also <key>XSLT</key> but it isn't usually
        used directly). For other languages you will need to download the
        necessary support files - usually just one jar - and update your classpath appropriately.
    </b>

    <b>Note: although <em>scriptStep</em> does support <key>javascript</key>, at the moment,
    it doesn't provide the mechanism to call JavaScript functions in your
        <key>HTML</key> pages under test.</b>
</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>language</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The scripting language to use. Required unless using the <em>keep</em> attribute in which case the value is optional but must agree with the original language if used. The value can be any language supported by the <key>BSF</key>, e.g. javascript, jacl, netrexx, java, javaclass, bml, vbscript, jscript, perlscript, perl, jpython, jython, lotusscript, xslt, pnuts, beanbasic, beanshell, ruby, judoscript, groovy.]]></description>
                            </parameter>
                            <parameter>
                                <name>src</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The name of the file containing the scripting code. You may omit this parameter if you have embedded script code.]]></description>
                            </parameter>
                            <parameter>
                                <name>keep</name>
                                <required>no</required>
                                <default>false</default>
                                <description><![CDATA[Indicates that the script engine should be kept for future steps. Variables created during one script step will remain available.]]></description>
                            </parameter>
                            <nestedParameter>
                                <name>addText</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The nested script code. You may omit this if you use the parameter src.]]></description>
                            </nestedParameter>
                    <post>
    <b>In order for the script to access its environment, the step sets some variables. These variables are set to
        Java objects in WebTest model. The API of WebTest will tell what these objects provide, but the scripting
        language
        used determine how the objects are accessed.</b>
        <dl>
            <li>
                <dt>step</dt>
                <dd>The scriptStep enclosing the script.</dd>
            </li>
            <li>
                <dt>response</dt>
                <dd>The last response received from the server.</dd>
            </li>
            <li>
                <dt>document</dt>
                <dd>The html or xml DOM for the last response.</dd>
            </li>
        </dl>

    <b>
        <em>Order Example</em>
    </b>

    <b>Consider the following fictitious order information
        embedded in an
        <key>HTML</key>
        page as follows:
    </b>

    <code caption='OrderPage'>
        <include src='examples/scriptStepOrderPageHtml.xml'/>
    </code>

    <b>Suppose we are testing that this order
        contains the correct information. For each line item,
        we want to check that the quantity times the unit
        price equals the total price for that line and that the total
        quantity and total price values in the final row actually
        agree with the values summed from previous line item rows.
        Here is some code we might use to perform these checks:</b>

    <code caption='JavascriptOrderTest'>
        <include src='examples/scriptStepOrderJavaScriptExample.xml'/>
    </code>

    <b>We could have done most of this using
        <key>XPATH</key>
        but
        the simple approach of hard-coding an
        <key>XPATH</key>
        statement for
        each line item would make our tests brittle if the
        number of line items could change in future tests.
    </b>

    <b>Here is the same example again using Groovy and making use of Groovy's <em>assert</em> functionality.</b>

    <code caption='GroovyOrderTest'>
        <include src='examples/scriptStepOrderGroovyExample.xml'/>
    </code>

    <b>
        <em>Traffic Light Example</em>
    </b>

    <b>Here is an example which shows some script code used to
        calculate what the alt text should be for a particular image.
        It assumes your page has
        <key>HTML</key>
        similar to the following:
    </b>

    <code caption='TrafficLightPage'>
        <include src='examples/scriptStepTrafficLightHtml.xml'/>
    </code>

    <b>We want to test that the correct alt text is used
        for the correct image. Here is the test code using
        <key>javascript</key>:
    </b>

    <code caption='JavascriptTrafficLightTest'>
        <include src='examples/scriptStepTrafficLightJavaScriptExample.xml'/>
    </code>

    <b>In this case, scripting is not strictly necessary because we
        could have used
        <key>XPATH</key>
        but it provides a useful simple example.
    </b>

    <b>Here is the same example using <key>groovy</key>:</b>

    <code caption='GroovyTrafficLightTest'>
        <include src='examples/scriptStepTrafficLightGroovyExample.xml'/>
    </code>

    <b>And the same again illustrating the <em>keep</em> attribute:</b>

    <code caption='GroovyTrafficLightWithKeepTest'>
        <include src='examples/scriptStepTrafficLightGroovyWithKeepExample.xml'/>
    </code>

    <b>Rather than having the scripting code inline, you can place
        it in a file and reference that file as follows:</b>

    <code caption='GroovyFileTrafficLightTest'>
        <include src='examples/scriptStepTrafficLightGroovyFileExample.xml'/>
    </code>

    <b>
        <em>Fibonacci Example</em>
    </b>

    <b>Consider an
        <key>HTML</key>
        page displaying mathematically significant
        numbers with markup as follows:
    </b>

    <code caption='FibonacciPage'>
        <include src='examples/scriptStepFibonacciHtml.xml'/>
    </code>

    <b>Here is a JRuby example
        (requires
        <em>jruby.jar</em>
        in your CLASSPATH),
        showing how to test that a web page
        displaying a Fibonacci number does in fact display a correct value:
    </b>

    <code caption='RubyFibonacciTest'>
        <include src='examples/scriptStepFibonacciRubyExample.xml'/>
    </code>

    <b>Here is the example again using Jython (requires
        <em>jython.jar</em>
        in your CLASSPATH):
    </b>

    <code caption='JythonFibonacciTest'>
        <include src='examples/scriptStepFibonacciJythonExample.xml'/>
    </code>

    <b>Here is the example again using BeanShell (requires
        <em>bsh-XX.YY.jar</em>
        in your CLASSPATH):
    </b>

    <code caption='BeanShellFibonacciTest'>
        <include src='examples/scriptStepFibonacciBeanShellExample.xml'/>
    </code>

    <b><em>See also:</em> the <stepref name="groovy" category="extension"/> step which offers
        the same functionality but specifically for the <key>groovy</key> language. The
        groovy functionality also allows test scripts to be written in groovy and
        call back into <key>ANT</key> and WebTest.</b>
</post>

                </step>
                <step>
                    <class>com.canoo.webtest.steps.store.StoreXPath</class>
                    <name>storeXPath</name>
                    <category>Core</category>
                    <description><![CDATA[This step stores the result of an <key>XPATH</key> expression into a property.]]></description>
                    <pre>

    <b>You may want to use <key>XPE</key>, an IDE or an XML editor for finding appropriate expressions.</b>

</pre>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The <key>XPATH</key> that shall be evaluated.]]></description>
                            </parameter>
                            <parameter>
                                <name>default</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The value to store in the property when the xpath evaluation returns no result (if not set, the step will fail if the xpath evaluation returns no result).]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the property in which to store the retrieved value.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The type of the property in which to store the retrieve value. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>The following example extracts the <em>href</em> attribute from the first anchor
    element and uses it for the following <em>invoke</em>.</b>

    <code caption="storeXPath example">
        <include src='examples/storexpathExample.xml'/>
    </code>

    <b><em>See also</em>: the <stepref name="verifyXPath"/> step.</b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailMessageContentFilter</class>
                    <name>emailMessageContentFilter</name>
                    <category>Email</category>
                    <description><![CDATA[Returns the content associated with a message (or message Part) as the current response.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>contentType</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The contentType. The contentType to use for a <em>Simple</em> message with uuencoded attachments. For MIME MultiPart messages, the contentType if supplied is checked against the contentType found.]]></description>
                            </parameter>
                            <parameter>
                                <name>partIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The part index.]]></description>
                            </parameter>
                            <parameter>
                                <name>save</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[A shorthand: <em>save='prefixName'</em> is the same as <em>savePrefix='prefixName' saveResponse='true'</em>.]]></description>
                            </parameter>
                            <parameter>
                                <name>savePrefix</name>
                                <required>no</required>
                                <default>the 'savePrefix' parameter as specified in &lt;config&gt;.</default>
                                <description><![CDATA[A name prefix can be specified for making a permanent copy of received responses. A unique number and the file extension (depending on the MIME-Type) will be appended. The <em>resultpath</em> attribute of the <config> element is used for determining the location of the saved result.]]></description>
                            </parameter>
                            <parameter>
                                <name>saveResponse</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[Whether to make a permanent copy of received responses. Overrides the default value set in the <config> element.]]></description>
                            </parameter>
                            <parameter>
                                <name>messageId</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The message id.]]></description>
                            </parameter>
                    <post>

    <b>
        Here is an example of using the <em>emailMessageContentFilter</em> step.
    </b>

    <code caption="emailMessageContentFilter">
        <include src='emailexamples/emailMessageContentFilterExample.xml'/>
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.exceltest.ExcelVerifyCellValue</class>
                    <name>excelVerifyCellValue</name>
                    <category>Excel</category>
                    <description><![CDATA[This step verifies the value of a specified cell in an Excel spreadsheet. Note that this step tests the actual stored value of the cell, not what is displayed in the spreadsheet. In particular, formulas will not be evaluated.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>text</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text value to verify against.]]></description>
                            </parameter>
                            <parameter>
                                <name>cell</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The spreadsheet cell to select. eg. A5. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>row</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The number of the row to select, starting at 1. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>col</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name or number (starting at 1) of the column to select. eg 1 or A. Either <em>cell</em> or <em>row</em> and <em>col</em> must be specified.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetName</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The name of the sheet to select. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                            <parameter>
                                <name>sheetIndex</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The index of the sheet to select, starting at zero. If no sheet is selected, the value of the last <em>excelSelectSheet</em> call is used, or defaults to the first sheet.]]></description>
                            </parameter>
                    <post>

    <code caption="excelVerifyCellValue">
        <include src='excelExamples/verifyCellValueExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyReadOnlyFieldStep</class>
                    <name>pdfVerifyReadOnlyField</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies the read-only status of a field in the <key>pdf</key> document.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>name</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The name of the field]]></description>
                            </parameter>
                            <parameter>
                                <name>readOnly</name>
                                <required>no</required>
                                <default>'yes'</default>
                                <description><![CDATA[Specifies whether the field is expected to be read-only or not.]]></description>
                            </parameter>
                            <parameter>
                                <name>page</name>
                                <required>no</required>
                                <default>all the pages</default>
                                <description><![CDATA[The numeric value of the page to restrict the verification to.]]></description>
                            </parameter>
                    <post>

    <code caption="pdfVerifyReadOnlyField">
        <include src='pdfexamples/verifyReadOnlyFieldExample.xml' />
    </code>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.emailtest.EmailStoreMessageCount</class>
                    <name>emailStoreMessageCount</name>
                    <category>Email</category>
                    <description><![CDATA[Stores the number of messages (optionally matching provided criteria) into a property.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>subject</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email Subject header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>from</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email From header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>to</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email To header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>cc</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email Cc header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>replyTo</name>
                                <required>no</required>
                                <default></default>
                                <description><![CDATA[The email ReplyTo header field.]]></description>
                            </parameter>
                            <parameter>
                                <name>property</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The target property name.]]></description>
                            </parameter>
                            <parameter>
                                <name>propertyType</name>
                                <required>no</required>
                                <default>the "defaultPropertyType" as specified in the "config" element is used.</default>
                                <description><![CDATA[The target property type. Either "ant" or "dynamic".]]></description>
                            </parameter>
                    <post>

    <b>
        See the <stepref name="emailDeleteMessage"/> documentation for an example of using this step.
    </b>

    <b>
        Note that <em>subject</em> and the email address attributes
        (<em>to</em>, <em>from</em>, <em>cc</em> and <em>replyTo</em>)
        are used for matching purposes to select a subset of the available messages.
        Each can be either plain text or a <key>regex</key>.
        Simply start and end them with the "/" character to make them a <key>regex</key>.
        If all of these are left blank, all messages will be selected for counting.
        In addition, <em>to</em>, <em>cc</em> and <em>replyTo</em> may contain
        a comma (",") separated list of email addresses. Each address must appear
        in an email message for it to match - order is not important.
    </b>

</post>
                </step>
                <step>
                    <class>com.canoo.webtest.steps.mouse.MouseOver</class>
                    <name>mouseOver</name>
                    <category>Extension</category>
                    <description><![CDATA[Triggers a <em>mouseOver</em> event on the <key>HTML</key> element identified by its <em>id</em> or <em>xpath</em>. If this triggers the load of a new page, then this page becomes the current one.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>htmlId</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The id of the HTML element to trigger the event on. One of <em>htmlId</em> or <em>xPath</em> must be set.]]></description>
                            </parameter>
                            <parameter>
                                <name>xpath</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The XPath identifying the HTL element to trigger the event on. One of <em>htmlId</em> or <em>xPath</em> must be set.]]></description>
                            </parameter>
                </step>
                <step>
                    <class>com.canoo.webtest.plugins.pdftest.PdfVerifyEncryptionPropertyStep</class>
                    <name>pdfVerifyEncryptionProperty</name>
                    <category>PDF</category>
                    <description><![CDATA[This step verifies a property of the <em>encrypt</em> dictionary from an encrypted <key>pdf</key> document. The step must either verify the existence of the <em>encrypt</em> dictionary property key or it must verify its value.]]></description>
                    <parameter>
                        <name>description</name>
                        <required>no</required>
                        <default></default>
                        <description><![CDATA[The description of this test step.]]></description>
                    </parameter>
                            <parameter>
                                <name>key</name>
                                <required>yes</required>
                                <default></default>
                                <description><![CDATA[The text of the <em>encrypt</em> dictionary property key.]]></description>
                            </parameter>
                            <parameter>
                                <name>exists</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[Specifies whether the property/field of interest is expected to exist or not. Must not be set if 'value' attribute is set.]]></description>
                            </parameter>
                            <parameter>
                                <name>regex</name>
                                <required>no</required>
                                <default>'false'</default>
                                <description><![CDATA[Specifies whether the value represents a <key>regex</key>.]]></description>
                            </parameter>
                            <parameter>
                                <name>value</name>
                                <required>yes/no</required>
                                <default></default>
                                <description><![CDATA[The text/<key>regex</key> required to match the property/field of interest. Must not be set if 'exists' attribute is set.]]></description>
                            </parameter>
                    <post>

    <b>
        Here are some examples using the <em>pdfVerifyEncryptProperty</em> step:
    </b>

    <code caption="pdfVerifyEncryptProperty 1">
        <include src='pdfexamples/verifyEncryptionPropertyExample1.xml' />
    </code>

    <code caption="pdfVerifyEncryptProperty 2">
        <include src='pdfexamples/verifyEncryptionPropertyExample2.xml' />
    </code>

</post>
                </step>
</webtest-doc>
